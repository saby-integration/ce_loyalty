
&НаКлиенте
&После("ПриОткрытии")
Процедура Saby_ПриОткрытииПосле(Отказ)
	Saby_Данные		= Saby_Сервисы_Клиент.Saby_ИнициализацияПеременных();
	Saby_Настройки	= ЭтаФорма.ВладелецФормы.Saby_Настройки;
	context_params	= ЭтаФорма.ВладелецФормы.context_params;
	Saby_Карта		= Неопределено;
	Saby_ДокументОснования= Saby_СвойстваИДопРеквизиты_Сервер.ПолучитьЗначениеСвойства(Объект.ЧекККМ, "Saby_ЧекККМУид");
КонецПроцедуры

&НаСервере
Функция Saby_ПолучитьМассивТоваровЧекаВозврата()
	ТоварыКРасчёту = Saby_ФормаСервер.ТаблицаЗначенийВМассивСтруктур(Объект.Товары.Выгрузить(), 
		"Номенклатура,КоличествоУпаковок,Цена,Сумма,СтавкаНДС" //Безпробелов
		);
	Для каждого ТовараСтрока Из ТоварыКРасчёту Цикл
		ТовараСтрока.Цена	= ТовараСтрока.Сумма / ТовараСтрока.КоличествоУпаковок; //TODO
	КонецЦикла;
	Возврат ТоварыКРасчёту;
КонецФункции

&НаКлиенте
&Вместо("ЗаписатьФискальнуюОперациюНаКлиенте")
Функция Saby_ЗаписатьФискальнуюОперациюНаКлиенте(ТребуетсяПовторнаяПопыткаЗаписи, РеквизитыФискальнойОперацииКассовогоУзла)
	Результат = ПродолжитьВызов(ТребуетсяПовторнаяПопыткаЗаписи, РеквизитыФискальнойОперацииКассовогоУзла);
	Если Результат Тогда
		Если ЗначениеЗаполнено(Saby_ДокументОснования) Тогда
			Saby_СвойстваИДопРеквизиты_Сервер.УстановитьЗначениеСвойства(Объект.Ссылка, "ДокументСБИС_Ид", Saby_ДокументОснования);
		КонецЕсли;
		ТоварыЧекаВозврата	= Saby_ПолучитьМассивТоваровЧекаВозврата();
		Оповестить("Запись_ЧекККМВозврат_ЧекПробит", Новый Структура("ТоварыЧека, Saby_Данные", ТоварыЧекаВозврата,  Saby_Данные), Объект.Ссылка);
	КонецЕсли;
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ОтрытьФормуВыбораКартыЛояльности()
	ТоварыДокумента	= Новый Массив;
	Saby_ФормаКлиент.Saby_ОткрытьФормуПоискаКартыЛояльности(ЭтаФорма, ТоварыДокумента, Истина);
КонецПроцедуры	

&НаКлиенте
Процедура Saby_ПослеЗакрытияФормыВыборкаКартыСкидки(РезультатОбработки, ДополнительныеПараметры) Экспорт
	Saby_Данные	= Saby_Core.get_prop(РезультатОбработки, "Saby_Данные", Saby_Данные);
	//Очистим данные, они в возврате не нужны
	Saby_Данные.Вставить("КЛБалловВсего",			0);
	Saby_Данные.Вставить("ДокументСумма",			0);
	Saby_Данные.Вставить("ДокументСуммаСоСкидкой",	0);
	Saby_Данные.Вставить("ДокументСкидка",			0);
	Saby_Данные.Вставить("ДокументВтчБаллами",		0);
	Saby_Данные.Вставить("ДокументБалловСписать",	0);
	Saby_Данные.Вставить("ДокументБалловДоступно",	0);

	Saby_Карта	= Saby_Core.get_prop(Saby_Данные, "КЛНомер", "КартаОтсутствует");
	Если Saby_Карта	= "" Тогда
		Saby_Карта	= "КартаОтсутствует";
	КонецЕсли;

	Если Saby_ВыполняемаяКоманда.Имя = "СмешаннаяОплата" Тогда
		СмешаннаяОплата(Saby_ВыполняемаяКоманда);
	ИначеЕсли Saby_ВыполняемаяКоманда.Имя = "ОплатитьНаличными" Тогда
		СмешаннаяОплата(Saby_ВыполняемаяКоманда);
	ИначеЕсли Saby_ВыполняемаяКоманда.Имя = "ОплатитьПлатежнойКартой" Тогда
		СмешаннаяОплата(Saby_ВыполняемаяКоманда);
	КонецЕсли;
	Saby_ВыполняемаяКоманда = Неопределено;
КонецПроцедуры

&НаКлиенте
&После("ЗавершениеОплаты")
Процедура Saby_ЗавершениеОплаты(РезультатОплаты, ДополнительныеПараметры) Экспорт
	Если РезультатОплаты = "Отмена" Или ТипЗнч(РезультатОплаты) <> Тип("Структура") Тогда
		Saby_Карта = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
&Вместо("СмешаннаяОплата")
Процедура Saby_СмешаннаяОплата(Команда)
	Если Saby_ДокументОснования = Неопределено И Saby_Карта = Неопределено Тогда
		Saby_ВыполняемаяКоманда = Команда;
		ОтрытьФормуВыбораКартыЛояльности();
	Иначе
		ПродолжитьВызов(Команда);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
&Вместо("ОплатитьНаличными")
Процедура Saby_ОплатитьНаличными(Команда)
	Если Saby_ДокументОснования = Неопределено И Saby_Карта = Неопределено Тогда
		ОтрытьФормуВыбораКартыЛояльности();
		Saby_ВыполняемаяКоманда = Команда;
	Иначе
		ПродолжитьВызов(Команда);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
&Вместо("ОплатитьПлатежнойКартой")
Процедура Saby_ОплатитьПлатежнойКартой(Команда)
	Если Saby_Карта = Неопределено Тогда
		ОтрытьФормуВыбораКартыЛояльности();
		Saby_ВыполняемаяКоманда = Команда;
	Иначе
		ПродолжитьВызов(Команда);
	КонецЕсли;
КонецПроцедуры

