
Функция СписокСерверовSaby() Экспорт
	СписокСрв = Новый Массив();
	СписокСрв.Добавить("online.sbis.ru");
	СписокСрв.Добавить("fix-online.sbis.ru");
	СписокСрв.Добавить("test-online.sbis.ru");
	Возврат СписокСрв;
КонецФункции

Функция ПрочитатьНастройкиПодключения( ) Экспорт
	
	НастройкиОбъект			= ИмяХранилищаНастроек();
	НастройкиПодключения	= ХранилищеОбщихНастроек.Загрузить(НастройкиОбъект, НастройкиОбъект,, НастройкиОбъект );
	//А вдруг кто - то записал таки в базу ересть, мы обойдем это косяк
	//Режим параноика
	Если ТипЗнч(НастройкиПодключения) <> Тип("Структура") Тогда 
		НастройкиПодключения = ПолучитьСтруктуруНастроек();
	КонецЕсли;
	
	//Параметры авторизации
	Если Не НастройкиПодключения.Свойство(ИмяСпособПодключения()) Тогда
		НастройкиПодключения.Вставить(ИмяСпособПодключения(),0);
	КонецЕсли;
	Если Не НастройкиПодключения.Свойство(ИмяЛогин()) Тогда
		НастройкиПодключения.Вставить(ИмяЛогин(),"");
	КонецЕсли;
	Если Не НастройкиПодключения.Свойство(ИмяПароль()) Тогда
		НастройкиПодключения.Вставить(ИмяПароль(),"");
	КонецЕсли;
	Если Не НастройкиПодключения.Свойство(ИмяИдПриложения()) Тогда
		НастройкиПодключения.Вставить(ИмяИдПриложения(),"");
	КонецЕсли;
	Если Не НастройкиПодключения.Свойство(ИмяКлюч()) Тогда
		НастройкиПодключения.Вставить(ИмяКлюч(),"");
	КонецЕсли;
	Если Не НастройкиПодключения.Свойство(ИмяСервер()) Тогда
		СервераSaby = СписокСерверовSaby();
		НастройкиПодключения.Вставить(ИмяСервер(), СервераSaby[0]);
	КонецЕсли;
	
	
	//Параметры прокси
	Если Не НастройкиПодключения.Свойство(ИмяПроксиИспользовать()) Тогда
		НастройкиПодключения.Вставить(ИмяПроксиИспользовать(),Ложь);
	КонецЕсли;
	Если Не НастройкиПодключения.Свойство(ИмяПроксиСервер()) Тогда
		НастройкиПодключения.Вставить(ИмяПроксиСервер(),"");
	КонецЕсли;
	Если Не НастройкиПодключения.Свойство(ИмяПроксиПорт()) Тогда
		НастройкиПодключения.Вставить(ИмяПроксиПорт(),0);
	КонецЕсли;
	Если Не НастройкиПодключения.Свойство(ИмяПроксиЛогин()) Тогда
		НастройкиПодключения.Вставить(ИмяПроксиЛогин(),"");
	КонецЕсли;
	Если Не НастройкиПодключения.Свойство(ИмяПроксиПароль()) Тогда
		НастройкиПодключения.Вставить(ИмяПроксиПароль(),"");
	КонецЕсли;
	Если Не НастройкиПодключения.Свойство(ИмяQRНаЧеке()) Тогда
		НастройкиПодключения.Вставить(ИмяQRНаЧеке(),Истина);
	КонецЕсли;
	
	
	//Клавиши
	ВремКлавиши = Неопределено;
	НастройкиПодключения.Свойство(ИмяБыстрыеКлавиши(), ВремКлавиши); 
	Если ТипЗнч(ВремКлавиши) <> Тип("Массив") Тогда 
		ВремКлавиши = Новый Массив();
		Для Каждого Команда ИЗ КомандыКлавиш() Цикл
			ВремКлавиши.Добавить( Новый Структура( ПолучитьСтрокуОписанияКоманды(), Команда.Форма, Команда.Команда, "", Ложь, Ложь, Ложь) );
		КонецЦикла;
	Иначе
		КлавишиИзНастроек	= ВремКлавиши;
		ВремКлавиши = Новый Массив();
		Для Каждого Команда ИЗ КомандыКлавиш() Цикл
			ИдхУдаления = 0;
			НоваяКмд = Новый Структура( ПолучитьСтрокуОписанияКоманды(), Команда.Форма, Команда.Команда, "", Ложь, Ложь, Ложь);
			Для Каждого ВремКлавиша Из КлавишиИзНастроек Цикл
				//Да - пузырёк, а как вы хотели организовать поиск в массиве структур?
				//Но мы таки его оптимизировали, удаляя отработанные строки
				Если ВремКлавиша.Команда = Команда.Команда Тогда
					ЗаполнитьЗначенияСвойств( НоваяКмд, ВремКлавиша, "Клавиша, Alt, Ctrl, Shift" );
					КлавишиИзНастроек.Удалить(ИдхУдаления);
					Найдена = Истина;
					Прервать;
				КонецЕсли;
				ИдхУдаления = ИдхУдаления + 1;
			КонецЦикла;
			ВремКлавиши.Добавить( НоваяКмд );
		КонецЦикла;
	КонецЕсли;
	НастройкиПодключения.Вставить(ИмяБыстрыеКлавиши(), ВремКлавиши);
	
	Возврат НастройкиПодключения;
	
КонецФункции

Функция ЗаписатьНастройкиПодключения( НастройкиПодключения ) Экспорт
	НастройкиОбъект = ИмяХранилищаНастроек();
	УстановитьПривилегированныйРежим(Истина);
	ХранилищеОбщихНастроек.Сохранить(НастройкиОбъект, НастройкиОбъект, НастройкиПодключения,, НастройкиОбъект );
КонецФункции

