
Функция ПолучитьОсновныеРевизиытДокументов( Знач Документы ) Экспорт
	Возврат Saby_Сервисы_СерверПодКонфигурацию.ПолучитьОсновныеРевизиытДокументов(Документы);
КонецФункции

Функция ПолучитьКодККТПоНалоговойСистеме(СистемаНалогообложения) Экспорт
	КодНС	= NULL;
	Если СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН Тогда
		КодНС	= 1;
	ИначеЕсли СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.УСНДоход Тогда
		КодНС	= 2;
	ИначеЕсли СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.УСНДоходРасход Тогда
		КодНС	= 4;
	ИначеЕсли СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ЕСН Тогда
		КодНС	= 16;
	ИначеЕсли СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.Патент Тогда
		КодНС	= 32;
	КонецЕсли;
	Возврат КодНС;
КонецФункции

Функция ПолучитьУчетнуюПолитикуОрганизацииИМагазинов( Организация, Магазин, Склад, ДатаСреза ) Экспорт
	Возврат Saby_Сервисы_СерверПодКонфигурацию.ПолучитьУчетнуюПолитикуОрганизацииИМагазинов(  Организация, Магазин, Склад, ДатаСреза );
КонецФункции

Функция ПолучитьСоответсвиеКодовНалоговойСтавкиИУчетнойПолитики() Экспорт
	
	НалоговыеСистемы	= Новый Массив();
	НалоговыеСистемы.Добавить(Перечисления.ТипыСистемНалогообложенияККТ.ОСН);			// 0
	НалоговыеСистемы.Добавить(Перечисления.ТипыСистемНалогообложенияККТ.УСНДоход);		// 1
	НалоговыеСистемы.Добавить(Перечисления.ТипыСистемНалогообложенияККТ.УСНДоходРасход);// 2
	НалоговыеСистемы.Добавить(Перечисления.ТипыСистемНалогообложенияККТ.ЕНВД);			// 3
	НалоговыеСистемы.Добавить(Перечисления.ТипыСистемНалогообложенияККТ.ЕСН);			// 4
	НалоговыеСистемы.Добавить(Перечисления.ТипыСистемНалогообложенияККТ.Патент);		// 5
	
	КодыНалоговыхСтавокККТ = Новый Соответствие();
	Для Каждого НалоговаяСистема Из НалоговыеСистемы Цикл
		КодыНалоговыхСтавокККТ.Вставить(НалоговаяСистема, Новый Соответствие());
		КодыНалоговыхСтавокККТ[НалоговаяСистема].Вставить(Перечисления.СтавкиНДС.БезНДС, 6);
		КодыНалоговыхСтавокККТ[НалоговаяСистема].Вставить(Перечисления.СтавкиНДС.НДС0, 0);
		КодыНалоговыхСтавокККТ[НалоговаяСистема].Вставить(Перечисления.СтавкиНДС.НДС10, 1);
		КодыНалоговыхСтавокККТ[НалоговаяСистема].Вставить(Перечисления.СтавкиНДС.НДС20, 3);
		КодыНалоговыхСтавокККТ[НалоговаяСистема].Вставить(Перечисления.СтавкиНДС.НДС10_110, 4);
		КодыНалоговыхСтавокККТ[НалоговаяСистема].Вставить(Перечисления.СтавкиНДС.НДС20_120, 9);
	КонецЦикла;
	
	ИндексНС = 3; //7: VAT_RATE_NONE,    # Без НДС (ЕНВД)
	КодыНалоговыхСтавокККТ[НалоговыеСистемы[ИндексНС]].Вставить(Перечисления.СтавкиНДС.БезНДС, 7);
	ИндексНС = 5; //8: VAT_RATE_NONE,    # Без НДС (Патент)
	КодыНалоговыхСтавокККТ[НалоговыеСистемы[ИндексНС]].Вставить(Перечисления.СтавкиНДС.БезНДС, 8);
	
	Возврат КодыНалоговыхСтавокККТ;
	
КонецФункции

Функция ЗаполнитьПараметрыСистемыНаСервере() Экспорт
	
	ПараметрыСистемы	= Новый Структура("Конфигурация, Сервер", Новый Структура(),Новый Структура() );
	СистемнаяИнформация = Новый СистемнаяИнформация;
	
	ПараметрыСистемы.Конфигурация.Вставить("Имя",					Метаданные.Имя);
	ПараметрыСистемы.Конфигурация.Вставить("КраткаяИнформация",		Метаданные.КраткаяИнформация);
	ПараметрыСистемы.Конфигурация.Вставить("ПодробнаяИнформация",	Метаданные.ПодробнаяИнформация);
	ПараметрыСистемы.Конфигурация.Вставить("Версия",				Метаданные.Версия);
	ПараметрыСистемы.Конфигурация.Вставить("ВстроенныйЯзык",		"ru");
	//Для анлгоязычных систем переопределим язык для проверки функций
	Если Найти(Строка(Метаданные), "Metadata") Тогда
		ПараметрыСистемы.Конфигурация.ВстроенныйЯзык = "en";
	КонецЕсли;
	//На толстом клиенте пока берем системную информацию клиента.
	//ПараметрыСистемы.Сервер.Вставить("ТипОС", 			ТипПлатфтормыСервер(СистемнаяИнформация));
	ПараметрыСистемы.Сервер.Вставить("ВерсияПриложения",СистемнаяИнформация.ВерсияПриложения);
	//ПараметрыСистемы.Сервер.Вставить("ЭтоLinux",		НРег(Лев(ПараметрыСистемы.Сервер.ТипОС, 5)) = "linux");	
	
	Возврат  ПараметрыСистемы;
КонецФункции

Функция ПолучитьОткрытуюКассовуюСмену ( КассаККМ, ДатаСмены = Неопределено ) Экспорт
	Возврат Saby_Сервисы_Сервер.ПолучитьОткрытуюКассовуюСмену ( КассаККМ, ДатаСмены = Неопределено );
КонецФункции

Функция ПолучитьНомераЧекаФискальногоУстройства(МассивДокументов) Экспорт
	Возврат Saby_Сервисы_Сервер.ПолучитьНомераЧекаФискальногоУстройства(МассивДокументов);
КонецФункции

Функция ПолучитьДанныеКассовыхСменЧековККМ(МассивДокументов) Экспорт
	Возврат Saby_Сервисы_СерверПодКонфигурацию.ПолучитьДанныеКассовыхСменЧековККМ(МассивДокументов);
КонецФункции

Функция ПолучитьДаннеДокументаСменыИРегНомер( Документы ) Экспорт
	Возврат Saby_Сервисы_СерверПодКонфигурацию.ПолучитьДаннеДокументаСменыИРегНомер( Документы );
КонецФункции

Функция ПолучитьНоменклатуруПоUID( UID ) Экспорт
	Возврат Справочники.Номенклатура.ПолучитьСсылку( Новый УникальныйИдентификатор( UID ));
КонецФункции

Функция ПолучитьОрганизацию(ЭтаФорма) Экспорт
	Возврат Saby_Сервисы_СерверПодКонфигурацию.ПолучитьОрганизацию(ЭтаФорма);
КонецФункции

Функция ПолучитьНомерСледующегоЧека() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ( ВЫРАЗИТЬ(ФО.ДокументОснование КАК Документ.ЧекККМ) ) КАК ДокументОснование
	|ПОМЕСТИТЬ Врем
	|ИЗ
	|	РегистрСведений.ФискальныеОперации КАК ФО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(Врем.ДокументОснование.Номер, ""1"") КАК Номер
	|ИЗ
	|	Врем КАК Врем
	|";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВДЗ = РезультатЗапроса.Выбрать();
	НомерЧекаВрем = "1";
	Пока ВДЗ.Следующий() Цикл
		НомерЧекаВрем = ВДЗ.Номер;
	КонецЦикла;
	НомерЧека	= "";
	Для ИндексСимвола = 1 По СтрДлина(НомерЧекаВрем) Цикл
		СимволНомера= Сред(НомерЧекаВрем, ИндексСимвола, 1);
		Если Найти("0123456789", СимволНомера) > 0 Тогда
			НомерЧека	= НомерЧека	+ СимволНомера;
		КонецЕсли;
	КонецЦикла;
	НомерЧека	= Число(НомерЧека) + 1;
	
	Возврат Прав("00000"+Формат(НомерЧека, "ЧГ=0"), 6);
КонецФункции

Функция ЕстьДокументОснование(Ссылка) Экспорт 
	Возврат НЕ Ссылка.ЧекККМПродажа.Пустая();
КонецФункции

