
Функция ПолучитьСтруктуруСтавкиНДС(СтавкаНДС) Экспорт
	Значение	= Неопределено;
	СтавкаНДСИд	= Неопределено;
	Если СтавкаНДС = Перечисления.СтавкиНДС.НДС0 Тогда
		Значение	= "0";
		СтавкаНДСИд	= "НДС0";
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС10 Тогда
		Значение	= "1";
		СтавкаНДСИд	= "НДС10";
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС18 Тогда
		ВызватьИсключение Saby_Core.NewExtExceptionСтрока(,"Некорректная ставка НДС. Поменяйте ставку НДС товара с 18% на 20%",,,,"BrokenTax" );
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда
		Значение	= "2";
		СтавкаНДСИд	= "НДС20";
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
		Значение	= "6";
		СтавкаНДСИд	= "БезНДС";
	КонецЕсли;
	
	ПодОбъектСтавкиНДС = Новый Структура(
		"ИдИС, ИдСБИС, Название, ИмяСБИС, ИмяИС, Ини", 
		СтавкаНДСИд,
		Значение, 
		СокрЛП(СтавкаНДС), 
		"СтавкаНДС",
		"СтавкаНДС",
		"СинхВыгрузка_СтавкаНДС"
	);
	СтруктуруСтавкиНДС = Новый Структура(
		"ИдИС, ИдСБИС, Название, ИмяСБИС, ИмяИС, Ини", 
		СтавкаНДСИд,
		Значение, 
		СокрЛП(СтавкаНДС), 
		"СтавкаНДС",
		"СтавкаНДС",
		"СинхВыгрузка_СтавкаНДС"
	);
	Возврат Новый Структура("ДляПодобъекта, ДляНоменклатуры", ПодОбъектСтавкиНДС, СтруктуруСтавкиНДС);
КонецФункции

Функция ПолучитьСтруктуруОбъектовДляРасчётаСкидки( мВхПараметры, ИдОперации = Неопределено ) Экспорт
	
	ПродажиМ				= Новый Массив;
	СтруктураПодОбъекты		= Новый Соответствие;
	
	НашиОрганизацияЛ1 = Новый Соответствие;
	//Один касякас, организация у нас должна быть одна и та же во всех чеках.
	ConnectionId	= "";
	
	ККТКодыСтавокНДС		= ПолучитьСоответсвиеКодовНалоговойСтавкиИУчетнойПолитики();
	ПодобъектыСтавкиНДС		= Новый Соответствие;
	
	Для Каждого ВхПараметр Из мВхПараметры Цикл
		
		УчПолитикаОрг		= ПолучитьУчетнуюПолитикуОрганизацииИМагазинов( ВхПараметр.Организация, ВхПараметр.Магазин, ВхПараметр.Склад, ТекущаяДата() );
		ККТСистемаНалогообл	= УчПолитикаОрг[ВхПараметр.Магазин][ВхПараметр.Склад]["СистемаНалогообложения"];
		
		ИмяНО_Л1	= СокрЛП(ВхПараметр.Организация.УникальныйИдентификатор());
		СтруктураПодОбъекты.Вставить("Справочники.Номенклатура", Новый Массив);
		
		НашаОрганизацияЛ2 = Новый Соответствие;
		НашаОрганизацияЛ2.Вставить(	"ИдИС", 	ИмяНО_Л1 );
		НашаОрганизацияЛ2.Вставить(	"ИмяСБИС",	"НашаОрганизация" );
		НашаОрганизацияЛ2.Вставить(	"ИмяИС",	"Справочники.Организации" );
		НашаОрганизацияЛ2.Вставить(	"Название",	СокрЛП(ВхПараметр.Организация.Наименование) );
		НашаОрганизацияЛ2.Вставить(	"ИНН",		СокрЛП(ВхПараметр.Организация.ИНН) );
		НашаОрганизацияЛ2.Вставить(	"КПП",		СокрЛП(ВхПараметр.Организация.КПП) );
		НашиОрганизацияЛ1.Вставить( ИмяНО_Л1,	НашаОрганизацияЛ2 );
		
		//Объект продажа подъобекты --
		//--Объект--
		ТаблДок		= Новый Массив();
		ТаблТовПО	= Новый Соответствие;
		Для Каждого ТовСтрока Из ВхПараметр.Товары Цикл
			ИнформацияОСтавкаеНДС	= ПолучитьСтруктуруСтавкиНДС(ТовСтрока.Номенклатура.СтавкаНДС);
			ПодобъектыСтавкиНДС.Вставить(ИнформацияОСтавкаеНДС.ДляПодобъекта["ИдИС"], ИнформацияОСтавкаеНДС.ДляПодобъекта);
			
			НоменклС			= Новый Соответствие;
			НоменклС.Вставить("ИдИС",		СокрЛП(ТовСтрока.Номенклатура.УникальныйИдентификатор()) );
			НоменклС.Вставить("ИмяСБИС",	"Номенклатура");
			НоменклС.Вставить("ИмяИС",		"Справочники.Номенклатура");
			НоменклС.Вставить("Ини",		"СинхВыгрузка_Номенклатура" );
			
			СтрокаСтруктура	= Новый Соответствие;
			СтрокаСтруктура.Вставить("Номенклатура",	НоменклС);
			СтрокаСтруктура.Вставить("Количество",		ТовСтрока.КоличествоУпаковок);
			СтрокаСтруктура.Вставить("Цена",			ТовСтрока.Цена);
			СтрокаСтруктура.Вставить("Сумма",			ТовСтрока.КоличествоУпаковок * ТовСтрока.Цена);
			СтрокаСтруктура.Вставить("СуммаНДС",		ТовСтрока.СуммаНДС);
			СтрокаСтруктура.Вставить("КодСтавкиНДС",	ККТКодыСтавокНДС[ККТСистемаНалогообл][ТовСтрока.СтавкаНДС]);
			Если ТовСтрока.ЦенаВручную <> ТовСтрока.Цена Тогда
				СтрокаСтруктура.Вставить("ЦенаВручную",		ТовСтрока.ЦенаВручную);
			КонецЕсли;
			
			//КэшированныеЗначения = ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
			//ТовСтрока.СтавкаНДС - но там --- 0
			ТекПроцентНДС = Saby_Сервисы_СерверПодКонфигурацию.ПолучитьПроцентНДС(ТовСтрока.Номенклатура.СтавкаНДС);
			СуммаНДС =  	Saby_Сервисы_СерверПодКонфигурацию.ПолучитьСуммуНДС(ТовСтрока.КоличествоУпаковок, ТовСтрока.Цена, ТекПроцентНДС, ВхПараметр.ЦенаВключаетНДС);
			ТаблДок.Добавить( СтрокаСтруктура );
			
			//Подъобъекты Номенклатура
			НомУИД = СокрЛП(ТовСтрока.Номенклатура.УникальныйИдентификатор());
			
			ПодОбъектНоменклЛ1	= Новый Соответствие;
			ПодОбъектНоменклЛ1.Вставить("ИдИС",		НомУИД);
			ПодОбъектНоменклЛ1.Вставить("ИмяСБИС",	"Номенклатура");
			ПодОбъектНоменклЛ1.Вставить("ИмяИС",	"Справочники.Номенклатура");
			ПодОбъектНоменклЛ1.Вставить("Код",		СокрЛП(ТовСтрока.Номенклатура.Код));
			ПодОбъектНоменклЛ1.Вставить("Название",	СокрЛП(ТовСтрока.Номенклатура.Наименование));
			ПодОбъектНоменклЛ1.Вставить("НазваниеПолное",	СокрЛП(ТовСтрока.Номенклатура.НаименованиеПолное));
			ПодОбъектНоменклЛ1.Вставить("СтавкаНДС", ИнформацияОСтавкаеНДС.ДляНоменклатуры);
			
			ПодОбъектНоменкл	= Новый Соответствие;
			ТаблТовПО.Вставить(НомУИД, ПодОбъектНоменклЛ1);
		КонецЦикла;
		СтруктураПодОбъекты.Вставить( "Справочники.Номенклатура", ТаблТовПО );
		СтруктураПодОбъекты.Вставить( "СтавкаНДС", ПодобъектыСтавкиНДС ); //TODO
		
		//НашаОрганизация			
		_НашаОрганизация_ 	= Новый Соответствие;
		_НашаОрганизация_.Вставить("ИмяСБИС",	"НашаОрганизация");
		_НашаОрганизация_.Вставить("ИмяИС",		"Справочники.Организации");
		_НашаОрганизация_.Вставить("ИдИС",		СокрЛП(ИмяНО_Л1));
		_НашаОрганизация_.Вставить("Ини",		"СинхВыгрузка_НашаОрганизация");
		
		_Покупатель_ 		= Неопределено;
		_ПокупательСтрукт_	= Неопределено;
		Если ВхПараметр.Свойство("Покупатель", _ПокупательСтрукт_) Тогда
			_Покупатель_ 	= Новый Соответствие;
			_Покупатель_.Вставить("QRКод",				"");
			_Покупатель_.Вставить("МобильныйТелефон",	"");
			_Покупатель_.Вставить("БонуснаяКарта",		"");
			//Покупатель
			Если _ПокупательСтрукт_.Свойство("QRКод") Тогда
				_Покупатель_.Вставить("QRКод",_ПокупательСтрукт_.QRКод);
			КонецЕсли;
			Если _ПокупательСтрукт_.Свойство("НомерКартыТелефона") Тогда
				_Покупатель_.Вставить("МобильныйТелефон",	_ПокупательСтрукт_.НомерКартыТелефона);
				_Покупатель_.Вставить("БонуснаяКарта",		_ПокупательСтрукт_.НомерКартыТелефона);
			КонецЕсли;
		КонецЕсли;
		
		НомерСледующегоЧека		= Saby_Сервисы_Сервер.ПолучитьНомерСледующегоЧека();
		СтруктураОбъектПродажа	= Новый Соответствие;
		СтруктураОбъектПродажа.Вставить("ИдИС", СокрЛП(ВхПараметр.ДокУИд));
		СтруктураОбъектПродажа.Вставить("ИмяСБИС",	"Продажа");
		СтруктураОбъектПродажа.Вставить("ИмяИС",	"Продажа");
		СтруктураОбъектПродажа.Вставить("Название", "Продажа " +НомерСледующегоЧека+" "+ Формат( ТекущаяДата(), "ДФ=dd.MM.yyyy"));
		СтруктураОбъектПродажа.Вставить("Номер", НомерСледующегоЧека);
		СтруктураОбъектПродажа.Вставить("Дата", Формат( ТекущаяДата(), "ДФ=dd.MM.yyyy"));
		Если ВхПараметр.Свойство("Возврат") Тогда
			СтруктураОбъектПродажа.Вставить("Возврат", Истина);
		КонецЕсли;
		Если _Покупатель_ <> Неопределено Тогда
			СтруктураОбъектПродажа.Вставить("Покупатель", _Покупатель_);
		КонецЕсли;
		СтруктураОбъектПродажа.Вставить("НашаОрганизация", _НашаОрганизация_);
		
		СписатьБаллов	= 0;
		Если ВхПараметр.Свойство("СписатьБаллов", СписатьБаллов) > 0 Тогда
			СтруктураОбъектПродажа.Вставить("СписатьБонусы", ВхПараметр.СписатьБаллов);
		КонецЕсли;
		СтруктураОбъектПродажа.Вставить("ТаблДок", ТаблДок);
		
		ДокументОснованиеСсылка = get_prop(ВхПараметр, "ДокументОснованиеСсылка");
		Если ЗначениеЗаполнено(ДокументОснованиеСсылка) Тогда
			ДокументИдИС = Saby_СвойстваИДопРеквизиты_Сервер.ПолучитьЗначениеСвойства(ДокументОснованиеССылка, "Saby_ЧекККМУид");
			Если ЗначениеЗаполнено(ДокументИдИС) Тогда
				СтруктураОбъектПродажа.Вставить("ДокументОснование", Новый Структура("ИдИС", ДокументИдИС));
			КонецЕсли;
		КонецЕсли;
		
		ПродажиМ.Добавить(СтруктураОбъектПродажа);
		
		ConnectionId	= СокрЛП(ВхПараметр.ConnectionId);
	КонецЦикла;
	
	//ПараметрОбъект	= Новый Соответствие;
	СтруктураПодОбъекты.Вставить("Справочники.Организации",	НашиОрганизацияЛ1);
	
	ПараметрОбъект2	= Новый Структура;
	ПараметрОбъект2.Вставить("ИдПодключения", ConnectionId);
	ИдОперации = ?(ЗначениеЗаполнено(ИдОперации), ИдОперации, СокрЛП(Новый УникальныйИдентификатор));
	ПараметрОбъект2.Вставить("ИдОперации", ИдОперации);
	ПараметрОбъект2.Вставить("primary", ПродажиМ );
	ПараметрОбъект2.Вставить("sub_obj", СтруктураПодОбъекты);
	
	ПараметрОбъект1	= Новый Структура;
	ПараметрОбъект1.Вставить("Объект", ПараметрОбъект2);
	
	Возврат ПараметрОбъект1;
	
КонецФункции

Функция ОбновитьОчередь( мДокЧекККМ = Неопределено, КоличествоЗаписей = 25 ) Экспорт
	//ВЫзывается как Процедура
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 25
	|	Saby_ОчередьЧеков.ЧекККМ КАК ЧекККМ,
	|	Saby_ОчередьЧеков.Передан КАК Передан
	|ИЗ
	|	РегистрСведений.Saby_ОчередьЧеков КАК Saby_ОчередьЧеков
	|ГДЕ
	|	НЕ Saby_ОчередьЧеков.Передан
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЧекККМ";
	
	Если ТипЗнч(КоличествоЗаписей) = Тип("Число") И КоличествоЗаписей > 0 ТОгда
		Запрос.Текст	= СтрЗаменить(Запрос.Текст, "25", Формат(КоличествоЗаписей, "ЧГ=0; ЧН=0;") );
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Если ТипЗнч(мДокЧекККМ) = Тип("Массив") Тогда
		Для Каждого ДокЧекККМ Из мДокЧекККМ Цикл
			
			Если ТипЗнч(ДокЧекККМ) = Тип("ДокументСсылка.ЧекККМ") Тогда
				ПлюсСтрока = РезультатЗапроса.Добавить();
				ПлюсСтрока.ЧекККМ	= ДокЧекККМ;
				ПлюсСтрока.Передан	= Ложь;
			ИначеЕсли ТипЗнч(ДокЧекККМ) = Тип("Структура") Тогда
				ссылкаДокККМ = Неопределено;
				ссылкаСтатус = Ложь;
				ДокЧекККМ.Свойство("ДокументЧекККМ", ссылкаДокККМ);
				ДокЧекККМ.Свойство("Статус", ссылкаСтатус);
				ПлюсСтрока = РезультатЗапроса.Добавить();
				ПлюсСтрока.ЧекККМ	= ссылкаДокККМ;
				ПлюсСтрока.Передан	= ссылкаСтатус;
			КонецЕсли;
			
		КонецЦикла;
	ИначеЕсли Метаданные.Документы.Найти("ЧекККМ") <> Неопределено И ТипЗнч(мДокЧекККМ) = Тип("ДокументСсылка.ЧекККМ") Тогда
		
		ПлюсСтрока = РезультатЗапроса.Добавить();
		ПлюсСтрока.ЧекККМ	= мДокЧекККМ;
		ПлюсСтрока.Передан	= Ложь;
		
	ИначеЕсли Метаданные.Документы.Найти("ЧекККМВозврат") <> Неопределено И ТипЗнч(мДокЧекККМ) = Тип("ДокументСсылка.ЧекККМВозврат") Тогда
		
		ПлюсСтрока = РезультатЗапроса.Добавить();
		ПлюсСтрока.ЧекККМ	= мДокЧекККМ;
		ПлюсСтрока.Передан	= Ложь;
		
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.Saby_ОчередьЧеков.СоздатьНаборЗаписей();
	НаборЗаписей.Записать();
	НаборЗаписей.Загрузить( РезультатЗапроса.Скопировать() );
	НаборЗаписей.Записать(Истина);
	
КонецФункции

Функция ПолучитьДокументыКОтправке( Количество = 1, ДокСсылка = Неопределено ) Экспорт
	Возврат Saby_Сервисы_СерверПодКонфигурацию.ПолучитьДокументыКОтправке(  Количество, ДокСсылка );
КонецФункции

