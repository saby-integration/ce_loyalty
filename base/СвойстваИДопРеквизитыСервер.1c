Функция НайтиСвойствоПоИмени( ИмяСвойства ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	НайденноеСВо = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту( "Имя", ИмяСвойства );
	Возврат НайденноеСВо;
	
КонецФункции

Функция СоздатьСвойство( ИмяСвойства, Наименование = "", Тип = "Строка", Длинна = 15, ДробнаяЧасть = 2 ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	НовоеЗнч = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту( "Имя", ИмяСвойства );
	
	Если Не ЗначениеЗаполнено(НовоеЗнч) Тогда
		
		Если ПустаяСтрока( Наименование ) Тогда
			Наименование = ИмяСвойства;
		КонецЕсли;
		
		Если ТипЗнч(Тип) = Тип("Строка") Тогда
			
			//Создадим Описание типа
			Если Врег(Тип) = "ЧИСЛО" Тогда
				ОТ	= Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла( Длинна, ДробнаяЧасть ) );
			ИначеЕсли Врег(Тип) = "СТРОКА" Тогда
				ОТ	= Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки( Длинна ) );
			ИначеЕсли Врег(Тип) = "ДАТА" Тогда
				ОТ	= Новый ОписаниеТипов("Дата",,,,, Новый КвалификаторыДаты( ЧастиДаты.ДатаВремя ) );
			КонецЕсли;
		
		ИначеЕсли ТипЗнч(Тип) = Тип("ОписаниеТипов") Тогда
			//Ни Чего не делаем
		КонецЕсли;
		
		НовПВХ = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
		НовПВХ.Наименование	= Наименование;
		НовПВХ.Заголовок	= Наименование;
		НовПВХ.Имя			= ИмяСвойства;
		НовПВХ.ТипЗначения	= Тип;
        НовПВХ.ЭтоДополнительноеСведение = Истина;        
        НовПВХ.Записать();
		
		НовоеЗнч = НовПВХ.Ссылка;
	КонецЕсли;
	
	Возврат НовоеЗнч;
	
КонецФункции

Функция ПолучитьЗначениеСвойства( ОбъектСсылка, ИмяСвойства ) Экспорт
	
	Если Не ЗначениеЗаполнено(ОбъектСсылка) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос			= Новый Запрос;
	Запрос.Текст	= 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ДС.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.ДополнительныеСведения КАК ДС
		|ГДЕ
		|	ДС.Свойство = &Свойство
		|	И ДС.Объект = &Объект
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДС.Объект";
	
	Запрос.УстановитьПараметр("Объект", ОбъектСсылка);
	Запрос.УстановитьПараметр("Свойство", НайтиСвойствоПоИмени( ИмяСвойства ) );
	ВДЗ = Запрос.Выполнить().Выбрать();
	ЗначениеСВа	= Неопределено;
	Пока ВДЗ.Следующий() Цикл
		ЗначениеСВа	= ВДЗ.Значение;
		Прервать;
	КонецЦикла;
	
	Возврат ЗначениеСВа;
			
КонецФункции

Функция УстановитьЗначениеСвойства( ОбъектСсылка, ИмяСвойства, Значение ) Экспорт
	
	Если Не ЗначениеЗаполнено(ОбъектСсылка) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	НовМЗ			= РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
	НовМЗ.Объект	= ОбъектСсылка;
	НовМЗ.Свойство	= НайтиСвойствоПоИмени( ИмяСвойства );
	НовМЗ.Значение	= Значение;
	
	СтатусОперации = Ложь;
	Попытка
		НовМЗ.Записать(Истина);
		СтатусОперации = Истина;
	Исключение
		СтатусОперации = Ложь;
	КонецПопытки;
	
	Возврат СтатусОперации;
	
КонецФункции

//Вызывается из формы настроек
Процедура НачальнаяИнициализация(ДопПараметры = Неопределено) Экспорт
	
	//Свойства документа продажи (Чек ККМ)
	СоздатьСвойство( "Saby_КартаЛояльности",	"Ид скидочной карты",	"Строка",	36 );
	СоздатьСвойство( "Saby_СуммаСкидки", 		"Сумма скидки",			"Число",	15, 2 );
	СоздатьСвойство( "Saby_ЧекККМУид",			"Процент скидки",		"Строка",	36 );
	СоздатьСвойство( "Saby_СсылкаНаЧек",		"Процент скидки",		"Строка",	255 );
	СоздатьСвойство( "Saby_БалловНачислено",	"Баллов начислено", 	"Число",	15, 2 );
	СоздатьСвойство( "Saby_БалловНаКарте",		"Баллов на на карте", 	"Число",	15, 2 );

	
	// Создадим Уникальный идентификатор базы. т.к. первая организация в базе еще ни чего не значит. например работаем в копии базы
	НайстройкиПодключения = Saby_Core.НастройкиПодключенияПрочитать();
	Если Saby_Core.ПрочитатьИдБазыДанных(НайстройкиПодключения) = Неопределено Тогда
		ИдБазы	= СокрЛП(Новый УникальныйИдентификатор);
		Saby_Core.ЗаписатьИдБазыДанных(ИдБазы);
	КонецЕсли;
	
КонецПроцедуры

