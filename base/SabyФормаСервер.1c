
Процедура Saby_СоздатьРеквизитыИЭлементыФормыНазначитьДействия(ЭтаФорма, ИмяГруппаИнфо, ИмяОпорногоЭлемента ) Экспорт
	Если ЭтаФорма.Элементы.Найти("Saby_ПоискКартыЛояльности") <> Неопределено Тогда
		Возврат; //Исключим повторное создание элемента - ПриПовторномОткрытии
	КонецЕсли;
	Saby_Настройки = Saby_Core.ОбщиеНастройкиПрочитать();
	Saby_Сервисы_СерверПодКонфигурацию.СоздатьКнопкуОткрытияФормыПоискаКарты(ЭтаФорма);
	Saby_ФормаСервер.УстановитьЗаголовокДляКомандыЭлемента(ЭтаФорма.Элементы.Saby_ПоискКартыЛояльности, "ОткрытьОкноСБИСЛояльность", Saby_Настройки);
	
	//Данные для надписи формы
	ДобавляемыеРеквизиты	= Новый Массив;
	Реквизит_НаименованиеДляПечати = Новый РеквизитФормы("Saby_КЛПредставление",	Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(100)),,"Данные о карте лояльности");
	ДобавляемыеРеквизиты.Добавить(Реквизит_НаименованиеДляПечати);
	ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	ЭтаФорма.Saby_КЛПредставление	= "Карта не выбрана.";
	
	Элементы = ЭтаФорма.Элементы;
	//Надпись выбранной карты
	НадписьКЛ = Элементы.Вставить("Saby_КЛПредставление", Тип("ПолеФормы"), Элементы[ИмяГруппаИнфо], Элементы[ИмяОпорногоЭлемента]); 
	НадписьКЛ.Заголовок				= "Карта";
	НадписьКЛ.ПутьКДанным			= "Saby_КЛПредставление";
	НадписьКЛ.Вид					= ВидПоляФормы.ПолеНадписи;
	НадписьКЛ.Шрифт					= Новый Шрифт(,,Истина);
	НадписьКЛ.ЦветТекстаЗаголовка	= WebЦвета.ТемноЗеленый;
	НадписьКЛ.ЦветТекста			= WebЦвета.ТемноЗеленый;
	
	//Назначим Действия на установку признака пересчета скидок
	ЭлементСписокТоваров	= ЭтаФорма.Элементы.Найти("Товары");	
	Если ЭлементСписокТоваров <> Неопределено ТОгда
		//Функции должны быть расположены в модуле формы
		ЭлементСписокТоваров.УстановитьДействие("ПриОкончанииРедактирования",	"Saby_ПриОкончанииРедактированияТовара");
		ЭлементСписокТоваров.УстановитьДействие("ПослеУдаления",				"Saby_ПослеУдаленияТовара");
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьЗаголовкиВсехКоманд(Элементы, Saby_Настройки) Экспорт
	УстановитьЗаголовокДляКомандыЭлемента( Элементы.КнопкаПоиск,		"ПоискКарты",		Saby_Настройки );
	УстановитьЗаголовокДляКомандыЭлемента( Элементы.КнопкаКопитьБаллы,	"КопимБаллы",		Saby_Настройки );
	УстановитьЗаголовокДляКомандыЭлемента( Элементы.КнопкаСписатьБаллы,	"СписываемБаллы",	Saby_Настройки );
КонецПроцедуры

Процедура ОбновитьПредставлениеКомандыСписатьБаллы(ЭтаФорма, Saby_Настройки) Экспорт
	КомандаСписать	= ЭтаФорма.Команды.Найти("КомандаСписатьБаллы");
	Если КомандаСписать <> Неопределено Тогда
		Если ЭтаФорма.Saby_БалловДоступно <> ЭтаФорма.Saby_БалловСписать Тогда
			НовыйЗаголовокКоманды = "Списать " +Формат(ЭтаФорма.Saby_БалловСписать, "ЧГ=0; ЧН=0")+ "";
		Иначе
			НовыйЗаголовокКоманды = "Списать все баллы";
		КонецЕсли;
		ЭтаФорма.Элементы.КнопкаСписатьБаллы.Заголовок = НовыйЗаголовокКоманды;
	КонецЕсли;
КонецПроцедуры

Функция УстановитьЗаголовокДляКомандыЭлемента( ЭлементФормы, ИмяКоманды, ДопНастройки ) Экспорт
	ВрКлавиши	= Saby_Core.get_prop(ДопНастройки, "f_keys", Новый Массив);
	Для Каждого СтрКоманды Из ВрКлавиши Цикл
		Если ИмяКоманды = СтрКоманды.Команда И Не ПустаяСтрока(СтрКоманды.Клавиша) Тогда
			ЭлементФормы.СочетаниеКлавиш= Новый СочетаниеКлавиш(Клавиша[СтрКоманды.Клавиша], СтрКоманды.Alt, СтрКоманды.Ctrl, СтрКоманды.Shift);
			ЭлементФормы.Заголовок 		= ЭлементФормы.Заголовок + Saby_Core.КомандаКлавишСтрокой(СтрКоманды);
			Попытка
				ЭлементФормы.ТекстНевыбраннойКартинки = ЭлементФормы.Заголовок;
			Исключение
			КонецПопытки;
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецФункции

Процедура УстановитьЗаголовокКомандыСписатьБаллы(Элементы, Saby_Настройки) Экспорт
	УстановитьЗаголовокДляКомандыЭлемента(Элементы.КнопкаСписатьБаллы,	"СписываемБаллы",	Saby_Настройки );
КонецПроцедуры

Функция ТаблицаЗначенийВМассивСтруктур(ТаблицаЗнач, ДоступныеПоляТЗ = Неопределено) Экспорт
	МассивСтруктур	= Новый Массив;
	
	мОграничениеПолей = СтрРазделить(ДоступныеПоляТЗ, ",", Ложь);
	ПоляСтруктуры	= Новый Массив;
	Для Каждого КолонкаТЗ Из ТаблицаЗнач.Колонки Цикл
		Если мОграничениеПолей.Количество() И мОграничениеПолей.Найти(КолонкаТЗ.Имя) = Неопределено Тогда Продолжить; КонецЕсли;
        ПоляСтруктуры.Добавить(КолонкаТЗ.Имя);
	КонецЦикла;
	ПоляСтруктуры	= СтрСоединить(ПоляСтруктуры, ",");
	
    Для Каждого СтрокаТЗ Из ТаблицаЗнач Цикл
        ЭлементСтруктура = Новый Структура(ПоляСтруктуры);
		ЗаполнитьЗначенияСвойств(ЭлементСтруктура, СтрокаТЗ);
        МассивСтруктур.Добавить(ЭлементСтруктура);
	КонецЦикла;
	
    Возврат МассивСтруктур;
КонецФункции

