
//События формы и элементов формы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДобавитьИнформациюОВерсии(Элементы.ВерсияПродукта);
	//Создадим необходимые нам свойства
	Saby_СвойстваИДопРеквизиты_Сервер.НачальнаяИнициализация();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Список заполнить нужно перед восстановлением значений
	Элементы.тблГорячиеКлавишиКлавиша.СписокВыбора.ЗагрузитьЗначения( Saby_Core.СписокДоступныхКлавиш() );
	
	ВосстановитьНастройки();
	УстановитьЗаголовокПодсказкуКнопкиВыйти();
	ПолучитьАктуальностьВерсии();
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветВопросаОЗакрытииФормы(Результат, Параметры) Экспорт // здесь, думаю, комментировать нечего
	Если Результат = КодВозвратаДиалога.Да Тогда
		СохранитьНастройки(Неопределено);
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность	= Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Оповещение = Новый ОписаниеОповещения("ОбработатьОтветВопросаОЗакрытииФормы", ЭтаФорма);
		ПоказатьВопрос(Оповещение,
		"Записать измененные даные?
		|Да     - Записать изменения и закрыть.
		|Нет    - Закрыть без изменения.
		|Отмена - Продолжить редактирование настроек.
		|",
		РежимДиалогаВопрос.ДаНетОтмена,
		0,
		КодВозвратаДиалога.Да,
		"Данные формы настроек изменены."
		);
		СтандартнаяОбработка = Ложь;
		Отказ = Истина;
		Возврат;
	КонецЕсли;

КонецПроцедуры

//Работа с настройками

&НаКлиенте
Процедура СохранитьНастройки(Команда)
	ДопНастройки	= Новый Структура();
	ДопНастройки.Вставить("PrintQR", 				QRНаЧеке );
	
	//Клавиши и команды
	тблКлавиши = Новый Массив();
	МассивСтруктурыКоманд = Новый Массив();
	Для Каждого Saby_Команда ИЗ Saby_Core.ПолучитьМассивКомандКлавиш() Цикл
		СтркКоманды = Новый Структура( Saby_Core.ПолучитьСтрокуОписанияКоманды(), Saby_Команда );
		мКомандаИзТаблицы = тблГорячиеКлавиши.НайтиСтроки( Новый Структура("Команда", Saby_Команда.Команда ) );
		Для Каждого КмдТаблицы Из мКомандаИзТаблицы Цикл
			ЗаполнитьЗначенияСвойств( СтркКоманды, КмдТаблицы );
			//СтркКоманды.Форма	= Saby_Команда.Форма; //Можно и не указывать, все равно при загрузке заполняем
			Прервать; //По идее всего одна запись должна быть
		КонецЦикла;
		МассивСтруктурыКоманд.Добавить( СтркКоманды );
	КонецЦикла;
	ДопНастройки.Вставить("f_keys", 	МассивСтруктурыКоманд );
	
	Saby_Core.ОбщиеНастройкиЗаписать( ДопНастройки );
	
	Модифицированность	= Ложь;
	Закрыть(Истина);
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройки()
	
	НастройкиПодключения	= Saby_Core.НастройкиПодключенияПрочитать();
	ИдБазыДанных			= Saby_Core.ПрочитатьИдБазыДанных(НастройкиПодключения);
	Если Saby_Core.ПрочитатьИдБазыДанных(НастройкиПодключения) = Неопределено Тогда
		ИдБазы	= СокрЛП(Новый УникальныйИдентификатор);
		Saby_Core.ЗаписатьИдБазыДанных(ИдБазы);
	КонецЕсли;
	
	ТблКомандыБК	= Saby_Core.ПолучитьМассивКомандКлавиш();
	
	НастройкиДоп	= Saby_Core.ОбщиеНастройкиПрочитать();
	ТблКлавиш		= get_prop(НастройкиДоп, "f_keys", Новый Массив);
	QRНаЧеке 		= get_prop(НастройкиДоп, "PrintQR", Истина);
	
	Для Каждого СтрокаКлавиш Из ТблКомандыБК Цикл
		СтрКоманды = тблГорячиеКлавиши.Добавить();
		ЗаполнитьЗначенияСвойств( СтрКоманды, СтрокаКлавиш );
		Для Каждого КлавишаИзНастроек Из ТблКлавиш Цикл
			Если КлавишаИзНастроек.Команда = СтрокаКлавиш.Команда Тогда
				ЗаполнитьЗначенияСвойств( СтрКоманды, КлавишаИзНастроек );
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

//Работа с настройками


//Авторизуется по логину/паролю	

&НаКлиенте
Процедура ПослеОтветаНаВопрос_СоздатьНовыйИдентификаторБазы(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ДопПараметр = Новый Структура("СоздатьНовыйИдентификаторБазы", Истина);
		Saby_СвойстваИДопРеквизиты_Сервер.НачальнаяИнициализация(ДопПараметр);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовыйИдентификаторБазы(Команда)
	ОповещениеОтвет = Новый ОписаниеОповещения("ПослеОтветаНаВопрос_СоздатьНовыйИдентификаторБазы", ЭтаФорма);
	ПоказатьВопрос(ОповещениеОтвет, "После изменения идентификатора, при обмене создастся новое подключение и все справочники будут сопоставляться заново, так же вся история обмена будет видна только в новом подключении. Продолжить и создать новый идентификатор?",
	РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет,"Создать новый идентификатор базы данных?"	);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьМодифицированность(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура тблГорячиеКлавишиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	УстановитьМодифицированность(Элемент);
КонецПроцедуры

//Авторизуется по логину/паролю	

Функция ПолучитьСБИСПараметры()
	МодульОбъекта = ПолучитьМодульОбъекта();
	saby_param = МодульОбъекта.НастройкиПодключенияПрочитать();
	Возврат saby_param;
КонецФункции	

&НаКлиенте
Процедура ОбработкаРезультатаЗакрытияФормыАвторизации(Результат, Параметры) Экспорт
	Если Результат = Неопределено Тогда Возврат; КонецЕсли;
	ПолучитьАктуальностьВерсии();
	УстановитьЗаголовокПодсказкуКнопкиВыйти();
	//А вот тут бы проверить куда мы дальше хотим идти, если есть такие указания в - Параметры
	//Это для команд открытия формы браузера.
	Если ТипЗнч(Параметры) = Тип("Структура") Тогда
		ОповещениеМодуль = get_prop(Параметры,"Модуль");
		ОповещениеМетод = get_prop(Параметры,"Метод");
		Если ОповещениеМодуль = Неопределено ИЛИ ОповещениеМетод = Неопределено Тогда Возврат; КонецЕсли;
		МетодЗавершенияАвторизации = Новый ОписаниеОповещения(ОповещениеМетод, ОповещениеМодуль);
		ВыполнитьОбработкуОповещения(МетодЗавершенияАвторизации);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокПодсказкуКнопкиВыйти()
	saby_param = ПолучитьСБИСПараметры();	
	Если get_prop(saby_param, "session") = Неопределено Тогда
		ЭтаФорма.Элементы.Выйти.Заголовок = "Войти";
		ЭтаФорма.Элементы.Выйти.Подсказка = "Открыть сессию в СБИС";
	Иначе
		ЭтаФорма.Элементы.Выйти.Заголовок = "Выйти";
		ЭтаФорма.Элементы.Выйти.Подсказка = "Закрыть сессию в СБИС";
	КонецЕсли;
	Элементы.ПереключитьАккаунт.Доступность = (ЭтаФорма.Элементы.Выйти.Заголовок = "Выйти");
	ЭтаФорма.ОбновитьОтображениеДанных();
КонецПроцедуры

&НаСервере
Процедура ВыйтиНаСервере()
	МодульОбъекта = ПолучитьМодульОбъекта();
	saby_param = МодульОбъекта.НастройкиПодключенияПрочитать();
	Если Тип(saby_param) = Тип("Структура") Тогда	
		saby_param.Вставить("session", Неопределено);
		saby_param.Вставить("password", Неопределено);
		МодульОбъекта.НастройкиПодключенияЗаписать(saby_param );
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ВыйтиНажатие(Элемент)
	Если ЭтаФорма.Элементы.Выйти.Заголовок = "Войти" Тогда
		ПроверкаВведенныхДанныхАутентификации = Новый ОписаниеОповещения("ОбработкаРезультатаЗакрытияФормыАвторизации", ЭтаФорма);
		ОткрытьФорму("Обработка.SABY.Форма.Вход",,,,,,ПроверкаВведенныхДанныхАутентификации);		
	Иначе	
		ВыйтиНаСервере();
		ПолучитьАктуальностьВерсии();
		УстановитьЗаголовокПодсказкуКнопкиВыйти();
		Сообщить("Сессия и пароль сброшены");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокАккаунтов()
	МодульОбъекта = ПолучитьМодульОбъекта();
	СписокАккаунтов	= Неопределено;
	Попытка
		Результат = МодульОбъекта.local_helper_get_accoutslist(Неопределено);
		СписокАккаунтов	= Новый СписокЗначений;
		Если ТипЗнч(Результат) = Тип("Массив") Тогда
			Для Каждого ЭлементАккаунт Из Результат Цикл
				СписокАккаунтов.Добавить(get_prop(ЭлементАккаунт,"НомерАккаунта"), get_prop(ЭлементАккаунт,"НазваниеАккаунта"));
			КонецЦикла;
		КонецЕсли;
	Исключение	
	КонецПопытки;
	Возврат СписокАккаунтов;
КонецФункции

&НаСервере
Функция  ОбработкаСменыАккаунтаНаСервер(account_id)
	МодульОбъекта = ПолучитьМодульОбъекта();
	Результат = МодульОбъекта.local_helper_switch_account(Неопределено, account_id);
	Возврат Результат;
КонецФункции

&НаКлиенте 
Процедура ОбработкаСменыАккаунта(ВыбранныйЭлемент, ПараметрыОповещения) Экспорт
	Если ВыбранныйЭлемент = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	ИдентификаторСесии = ОбработкаСменыАккаунтаНаСервер(ВыбранныйЭлемент.Значение);
	Если ТипЗнч(ИдентификаторСесии) = Тип("Строка") Тогда
		ПоказатьОповещениеПользователя("Авторизация",,"Выполнен вход - "+ВыбранныйЭлемент.Представление,
		,СтатусОповещенияПользователя.Информация,
		Новый УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СменитьАккаунтНажатие(Элемент)
	СписокАккаунтов = ПолучитьСписокАккаунтов();
	Если СписокАккаунтов = Неопределено Тогда
		ПоказатьОповещениеПользователя("Внимание",,"Произшла ошибка при получении списка аккаунтов.",
		,СтатусОповещенияПользователя.Важное,
		Новый УникальныйИдентификатор);
		Возврат;
	ИначеЕсли СписокАккаунтов.Количество() < 2 Тогда
		ПоказатьОповещениеПользователя("Внимание",,"У вас один аккаунт. Смена невозможна.",
		,СтатусОповещенияПользователя.Информация,
		Новый УникальныйИдентификатор);
		Возврат;
	КонецЕсли;
	ОповещениеВыбораАккаутна = Новый ОписаниеОповещения("ОбработкаСменыАккаунта", ЭтаФорма);
	ПоказатьВыборИзСписка(ОповещениеВыбораАккаутна, СписокАккаунтов);
КонецПроцедуры

