
#Область Пересчёт_ЦЕН

Функция	ПолучитьПроцентНДС(СтавкаНДС) Экспорт
	Возврат УчетНДСУПКлиентСервер.ПолучитьСтавкуНДС(СтавкаНДС.СтавкаНДС);
КонецФункции

Функция	ПолучитьСуммуНДС(КоличествоУпаковок, Цена, ТекПроцентНДС, ЦенаВключаетНДС) Экспорт
	Возврат УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(КоличествоУпаковок * Цена,
															ТекПроцентНДС,
															ЦенаВключаетНДС);
КонецФункции

Функция ПолучитьСтавкуНДСИзСтрокиДокумента(СтавкаНДС) Экспорт
	Возврат СтавкаНДС;
КонецФункции	

#КонецОбласти

#Область СборДанных

Функция ПолучитьОрганизацию(ЭтаФорма) Экспорт
	Возврат ЭтаФорма.Объект.КассоваяСмена.Организация;
КонецФункции

Функция ЭтоВозврат(Объект) Экспорт
	Возврат Ложь;
	//Возврат Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Возврат");
КонецФункции

Функция ПолучитьУчетнуюПолитикуОрганизацииИМагазинов( Организация, Магазин, Склад, ДатаСреза ) Экспорт
	УчетнаяПолитикаОрганизации	= Новый Соответствие();
	СистемаНалогообложения	= Перечисления.ТипыСистемНалогообложенияККТ.ОСН;  //TODO
	КОДНС = Saby_Сервисы_Сервер.ПолучитьКодККТПоНалоговойСистеме(СистемаНалогообложения);
	УчетнаяПолитикаОрганизации.Вставить(Магазин, Новый Соответствие());
	УчетнаяПолитикаОрганизации[Магазин].Вставить(Склад, Новый Соответствие());
	УчетнаяПолитикаОрганизации[Магазин][Склад].Вставить("СистемаНалогообложения", СистемаНалогообложения);
	УчетнаяПолитикаОрганизации[Магазин][Склад].Вставить("КодСН", КОДНС);
	
	Возврат УчетнаяПолитикаОрганизации;
КонецФункции

Функция ПолучитьОткрытуюКассовуюСмену ( КассаККМ, ДатаСмены = Неопределено ) Экспорт
	
	Если ДатаСмены = Неопределено Тогда
		ДатаСмены = ТекущаяДата();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДокументКассоваяСмена.Ссылка КАК Ссылка,
	|	ДокументКассоваяСмена.ВерсияДанных КАК ВерсияДанных,
	|	ДокументКассоваяСмена.ПометкаУдаления КАК ПометкаУдаления,
	|	ДокументКассоваяСмена.Номер КАК Номер,
	|	ДокументКассоваяСмена.Дата КАК Дата,
	|	ДокументКассоваяСмена.Проведен КАК Проведен,
	|	ДокументКассоваяСмена.КассаККМ КАК КассаККМ,
	|	ДокументКассоваяСмена.НомерСменыККТ КАК НомерСменыККТ,
	|	ДокументКассоваяСмена.Организация КАК Организация,
	|	ДокументКассоваяСмена.Статус КАК Статус,
	|	ДокументКассоваяСмена.ФискальноеУстройство КАК ФискальноеУстройство,
	|	ДокументКассоваяСмена.ФискальноеУстройство.ТипОборудования КАК ТипОборудования,
	|	ДокументКассоваяСмена.ФискальноеУстройство.РабочееМесто КАК РабочееМесто
	|ИЗ
	|	Документ.КассоваяСмена КАК ДокументКассоваяСмена
	|ГДЕ
	|	ДокументКассоваяСмена.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКассовойСмены.Открыта)
	|	И ДокументКассоваяСмена.Дата МЕЖДУ &ДатаН И &ДатаО
	|	И ДокументКассоваяСмена.КассаККМ = &КассаККМ
	|	И ДокументКассоваяСмена.ФискальноеУстройство = &ФискальноеУстройство";
	
	РезультатЗапроса = Запрос.Выполнить();
	Запрос.Параметры.Вставить("ДатаН", НачалоДня(ДатаСмены) );
	Запрос.Параметры.Вставить("ДатаО", КонецДня(ДатаСмены));
	Запрос.Параметры.Вставить("КассаККМ", КассаККМ);
	Запрос.Параметры.Вставить("ФискальноеУстройство", КассаККМ.ФискальноеУстройство);
	Результат = РезультатЗапроса.Выбрать().Выбрать();
	
	ВозратЗнч	= Неопределено;
	Если Результат.Количество() > 0 Тогда
		ВозратЗнч	= Результат;
	КонецЕсли;
	
	Возврат ВозратЗнч;
	
КонецФункции

Функция ПолучитьНомераЧекаФискальногоУстройства(МассивДокументов) Экспорт
	
	мЧековККМ	= Новый Массив;
	Для Каждого ДокДанные Из МассивДокументов Цикл
		мЧековККМ.Добавить(ДокДанные.Ссылка);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ФО.ДокументОснование КАК ДокументОснование,
		|	ФО.НомерЧекаККМ КАК НомерЧекаККМ,
		|	ФО.НомерСменыККМ КАК НомерСменыККМ,
		|	ФО.РегистрационныйНомерККТ КАК РегистрационныйНомерККТ,
		|	ФО.ДанныеXML КАК ДанныеXML
		|ИЗ
		|	РегистрСведений.ФискальныеОперации КАК ФО
		|ГДЕ
		|	ФО.ДокументОснование В(&мЧековККМ)";
	Запрос.УстановитьПараметр("мЧековККМ", мЧековККМ);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Результат	= Новый Соответствие;
	Для Каждого ЗаписьОПродаже  Из РезультатЗапроса Цикл
		ДанныеПоДокументу = Новый Структура("НомерЧекаККМ,НомерСменыККМ,РегистрационныйНомерККТ,ДанныеXML");
		ЗаполнитьЗначенияСвойств(ДанныеПоДокументу, ЗаписьОПродаже);
		ДанныеПоДокументу.НомерЧекаККМ = Формат(ДанныеПоДокументу.НомерЧекаККМ,"ЧГ=0");
		ДанныеПоДокументу.НомерСменыККМ = Формат(ДанныеПоДокументу.НомерСменыККМ,"ЧГ=0");
		//Получим РегистрационныйНомерККТ и подменим его тестовым. отладка.
		ДанныеПоДокументу.РегистрационныйНомерККТ 	= ПолучитьРегистрационныйНомерККТ( ЗаписьОПродаже.РегистрационныйНомерККТ );
		Результат.Вставить(ЗаписьОПродаже.ДокументОснование, ДанныеПоДокументу);
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ПолучитьДанныеКассовыхСменЧековККМ(МассивДокументов) Экспорт
		
	мЧековККМ	= Новый Массив;
	Для Каждого ДокДанные Из МассивДокументов Цикл
		мЧековККМ.Добавить(ДокДанные.Ссылка);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЧекККМ.Ссылка КАК Ссылка,
	|	ЧекККМ.Организация КАК Организация,
	|	"""" КАК Магазин,
	|	ЧекККМ.КассаККМ КАК КассаККМ,
	|	ЧекККМ.Дата КАК Дата
	|ПОМЕСТИТЬ ДокументыЧекиККМ
	|ИЗ
	|	Документ.ЧекККМ КАК ЧекККМ
	|ГДЕ
	|	ЧекККМ.Ссылка В(&мДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КассоваяСмена.Ссылка КАК КассоваяСмена,
	|	ДокументыЧекиККМ.Ссылка КАК ЧекККМ
	|ИЗ
	|	ДокументыЧекиККМ КАК ДокументыЧекиККМ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КассоваяСмена КАК КассоваяСмена
	|		ПО ДокументыЧекиККМ.КассаККМ = КассоваяСмена.КассаККМ
	|			И (КассоваяСмена.НачалоКассовойСмены >= ДОБАВИТЬКДАТЕ(ДокументыЧекиККМ.Дата, ДЕНЬ, -1))
	|			И (КассоваяСмена.НачалоКассовойСмены < ДокументыЧекиККМ.Дата)
	|ГДЕ
	|	КассоваяСмена.Проведен";
	
	Запрос.УстановитьПараметр("мДокументов",	мЧековККМ);
	РезультатЗапроса = Запрос.Выполнить();
	ВДЗ = РезультатЗапроса.Выбрать();
	Результат	= Новый Соответствие;
	Пока ВДЗ.Следующий() Цикл
		ДанныеКассовойСмены = Новый Структура();
		ДанныеКассовойСмены.Вставить("КассоваяСмена",		ВДЗ.КассоваяСмена);
		ДанныеКассовойСмены.Вставить("КассоваяСменаНомер",	ВДЗ.КассоваяСмена.НомерСменыККТ);
		ДанныеКассовойСмены.Вставить("ДатаОткрытия",		ВДЗ.КассоваяСмена.НачалоКассовойСмены);
		ДанныеКассовойСмены.Вставить("ДатаЗакрытия", 		ВДЗ.КассоваяСмена.ОкончаниеКассовойСмены);
		Результат.Вставить(ВДЗ.ЧекККМ, ДанныеКассовойСмены);
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ПолучитьДаннеДокументаСменыИРегНомер( Документы ) Экспорт
	
	Если ТипЗнч(Документы) = Тип("Массив") Тогда
		мДокументов	= Документы;
	Иначе
		мДокументов	= Новый Массив;
		мДокументов.Добавить(Документы);
	КонецЕсли;
	
	ФискальныеДанныеДокументов	 = ПолучитьНомераЧекаФискальногоУстройства(мДокументов);
	ДанныеКассовыхСмен			 = ПолучитьДанныеКассовыхСменЧековККМ(мДокументов);
	
	СводнаяРезультатов	= Новый Соответствие;
	Для Каждого ДокСсылка Из мДокументов Цикл
		
		ФискальныеДанные	= ФискальныеДанныеДокументов[ДокСсылка.Ссылка];
		ДанныеКассовойСмены	= ДанныеКассовыхСмен[ДокСсылка.Ссылка];
		
		Результат	= Новый Структура(
		"РегистрационныйНомерККТ, КассоваяСмена, КассоваяСменаНомер, ДатаОткрытия, ДатаЗакрытия, СуммаНал, СуммаБезНал, НомерЧекаККМ, Организация, ДанныеXML", 
		9999999999999999, 
		ПредопределенноеЗначение("Документ.КассоваяСмена.ПустаяСсылка"),
		"",
		ТекущаяДата(),
		ТекущаяДата(),
		0,
		0,
		ФискальныеДанные.НомерЧекаККМ,
		ДокСсылка.Ссылка.Организация,
		);
		Если ТипЗнч(ФискальныеДанные.ДанныеXML) = Тип("Строка") Тогда
			Результат.ДанныеXML					= ФискальныеДанные.ДанныеXML; 
		ИначеЕсли ТипЗнч(ФискальныеДанные.ДанныеXML) = Тип("ХранилищеЗначения") Тогда
			Результат.ДанныеXML					= ФискальныеДанные.ДанныеXML.Получить(); 
		КонецЕсли;
		Результат.РегистрационныйНомерККТ 	= ФискальныеДанные.РегистрационныйНомерККТ;
		СводнаяРезультатов.Вставить(ДокСсылка.Ссылка, Результат);
		ЗаполнитьЗначенияСвойств(Результат, ДанныеКассовойСмены);
		
		Результат.СуммаНал		= ДокСсылка.Ссылка.СуммаДокумента;
		Для Каждого ОпатаБНал Из ДокСсылка.Ссылка.ОплатаПлатежнымиКартами Цикл
			Результат.СуммаБезНал = Результат.СуммаБезНал + ОпатаБНал.Сумма;
		КонецЦикла;
		Результат.СуммаНал		= Результат.СуммаНал		- Результат.СуммаБезНал;
		Результат.СуммаБезНал	= Формат(Результат.СуммаБезНал, "ЧРД=.; ЧН=0; ЧГ=0");
		Результат.СуммаНал		= Формат(Результат.СуммаНал,	"ЧРД=.; ЧН=0; ЧГ=0");
		
		СводнаяРезультатов.Вставить(ДокСсылка.Ссылка, Результат);
	КонецЦикла;
	
	Возврат СводнаяРезультатов;
	
КонецФункции

Функция ПолучитьОсновныеРевизиытДокументов( Знач Документы ) Экспорт
	Если ТипЗнч(Документы) = Тип("Массив") Тогда
		МДокументов	= Документы;
	Иначе
		МДокументов	= Новый Массив;
		МДокументов.Добавить(Документы);
	КонецЕсли;
	
	РезультатОбработки = Новый Соответствие;
	Для Каждого Документ Из МДокументов Цикл
		РезультатОбработки.Вставить(Документ.Ссылка, Новый Соответствие );
		РезультатОбработки[Документ.Ссылка].Вставить("Дата",		Документ.Ссылка.Дата);
		РезультатОбработки[Документ.Ссылка].Вставить("Организация", Документ.Ссылка.Организация);
		РезультатОбработки[Документ.Ссылка].Вставить("Магазин",		"");
		Попытка
			РезультатОбработки[Документ.Ссылка].Вставить("Склад",	Документ.Ссылка.Товары[0].Склад);
		Исключение
			Попытка
				РезультатОбработки[Документ.Ссылка].Вставить("Склад",	ПараметрыСеанса.ТекущийПользователь.Магазин.СкладПродажи);
			Исключение
				РезультатОбработки[Документ.Ссылка].Вставить("Склад",	Документ.Ссылка.Склад);
			КонецПопытки;
		КонецПопытки;
	КонецЦикла;
	
	Возврат РезультатОбработки;
КонецФункции

Функция ПолучитьДокументыКОтправке( Количество = 1, ДокСсылка = Неопределено ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Saby_ОчередьЧеков.ЧекККМ КАК ЧекККМ,
	|	Saby_ОчередьЧеков.Передан КАК Передан,
	|	ВЫБОР
	|		КОГДА Saby_ОчередьЧеков.ЧекККМ ССЫЛКА Документ.ЧекККМВозврат
	|			ТОГДА Saby_ОчередьЧеков.ЧекККМ.ЧекККМ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокОснование
	|ИЗ
	|	РегистрСведений.Saby_ОчередьЧеков КАК Saby_ОчередьЧеков
	|ГДЕ
	|	ИСТИНА
	|	И НЕ Saby_ОчередьЧеков.Передан
	|	И ВЫБОР
	|			КОГДА &ДокСсылка <> НЕОПРЕДЕЛЕНО
	|				ТОГДА Saby_ОчередьЧеков.ЧекККМ = &ДокСсылка
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("ДокСсылка", ДокСсылка );
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1", "ПЕРВЫЕ " + Формат(Количество, "ЧН=0; ЧГ=0") );
	РезультатЗапроса = Запрос.Выполнить();
	
	//Попытка
	ВДЗ = РезультатЗапроса.Выбрать();
	//Исключение
	//	ио = ИнформацияОбОшибке();
	//КонецПопытки;
	мДокументов	= Новый Массив;
	Пока ВДЗ.Следующий() Цикл
		мДокументов.Добавить(Новый Структура("Ссылка, ДокОснование", ВДЗ.ЧекККМ, ВДЗ.ДокОснование) );
	КонецЦикла;
	Возврат мДокументов;
	
КонецФункции

Функция ПолучитьРегистрационныйНомерККТ( РегистрационныйНомерККТ ) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	ДанныеТестовогоФР = ХранилищеОбщихНастроек.Загрузить("Saby", "DataKKT",,"Saby");
	Если ТипЗнч(ДанныеТестовогоФР) = Тип("Структура") Тогда
		ТестовыйНомерККТ = Saby_Core.get_prop(ДанныеТестовогоФР, "РегистрационныйНомерККТ", РегистрационныйНомерККТ);
		Если ТипЗнч(ТестовыйНомерККТ) = Тип("Число") ТОгда
			ТестовыйНомерККТ = Формат(ТестовыйНомерККТ, "ЧГ=0");	
		КонецЕсли;
	Иначе
		ТестовыйНомерККТ = РегистрационныйНомерККТ;
	КонецЕсли;
	Возврат ТестовыйНомерККТ;
КонецФункции

#КонецОбласти

#Область Интерфейс

Процедура СоздатьКнопкуОткрытияФормыПоискаКарты(ЭтаФорма) Экспорт
	Элементы = ЭтаФорма.Элементы;
	////Скроем стандартный фуекционал
	//КнопкаШК	= Элементы.Найти("ПоискПоШтрихкоду");
	//Если ТипЗнч(КнопкаШК) = Тип("КнопкаФормы") Тогда
	//	КнопкаШК.Видимость	= Ложь;
	//КонецЕсли;
	
	//Иначе никак, кнопкам нужна команда.
	НоваяКоманда = ЭтаФорма.Команды.Добавить("Команда_ОткрытьФормуПоискаКартыСбис");
	НоваяКоманда.Заголовок = "СБИС Лояльность";
	НоваяКоманда.Действие = "Saby_ПоискКартыЛояльностиНажатие_Комманда";
	
	//Добавим кнопку Поиска Клиента в сервисе СБBС
	КнопкаСбис = Элементы.Вставить("Saby_ПоискКартыЛояльности", Тип("КнопкаФормы"), Элементы.ГруппаВерхняяКоманднаяПанель, Элементы.СчитатьКартуЛояльности); 
	КнопкаСбис.Заголовок		= "СБИС Лояльность";
	КнопкаСбис.ВысотаЗаголовка	= 2;
	КнопкаСбис.ИмяКоманды	= "Команда_ОткрытьФормуПоискаКартыСбис";
КонецПроцедуры

#КонецОбласти
