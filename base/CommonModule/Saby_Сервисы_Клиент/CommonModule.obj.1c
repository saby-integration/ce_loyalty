
#Область include_base_SabyСервисыКлиент_СервисныеФункции
#КонецОбласти

#Область include_base_SabyСервисыКлиент_СервисныеФункцииКлиент
#КонецОбласти

#Область include_base_SabyСервисыКлиент_ПоискКартыЛояльности
#КонецОбласти

#Область include_base_SabyСервисыКлиент_РасчётСкидок
#КонецОбласти

#Область include_base_SabyСервисыКлиент_Очередь
#КонецОбласти

#Область include_core_base_Helpers_РаботаСоСвойствамиСтруктуры
#КонецОбласти

&НаКлиенте
Процедура ЗапуститьОповещениеПриНаличииСессии_ПослеАутентификации(Результат, Параметры) Экспорт
	Если Результат <> Неопределено Тогда
		ЗапуститьОповещениеПриНаличииСессии(Параметры.ОбъектОповещения, Параметры.ИмяОповещения, Параметры.ПараметрыОповещения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ЗапуститьОповещениеПриНаличииСессии(ОбъектОповещения, ИмяОповещения, Параметры) Экспорт
	context_param = Saby_Core.ПроверитьНаличиеПараметровПодключения();
	Если context_param = Неопределено Тогда
		ПараметрыОбратногоВызова	= Новый Структура("ОбъектОповещения, ИмяОповещения, ПараметрыОповещения", ОбъектОповещения, ИмяОповещения, Параметры);
		Оповещение = Новый ОписаниеОповещения("ЗапуститьОповещениеПриНаличииСессии_ПослеАутентификации", Saby_Сервисы_Клиент, ПараметрыОбратногоВызова);
		ОткрытьФорму("Обработка.SABY.Форма.Вход",,,,,, Оповещение);
		Возврат Неопределено;
	КонецЕсли;
	Оповещение = Новый ОписаниеОповещения(ИмяОповещения, ОбъектОповещения, Параметры);
	ВыполнитьОбработкуОповещения(Оповещение, context_param);
КонецФункции

