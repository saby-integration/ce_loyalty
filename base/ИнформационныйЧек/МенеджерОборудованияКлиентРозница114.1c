
&Вместо("НачатьВыполнениеКоманды_ВыполнитьКомандуЗавершение")
Процедура Saby_НачатьВыполнениеКоманды_ВыполнитьКомандуЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если РезультатВыполнения.Результат Тогда
		
		ТекстСообщения = НСтр("ru='Ошибок нет.'");
		
		Если МенеджерОборудованияКлиентСервер.ТребуетсяВызовСобытияПослеВыполненияКомандыФискальнымУстройством(Параметры) Тогда
			
			СтруктураПараметров = Новый Структура();
			
			Если (РезультатВыполнения.ВыходныеПараметры.Количество() > 4) И РезультатВыполнения.ВыходныеПараметры[4] <> Неопределено Тогда
				СтруктураПараметров.Вставить("ФискальныеДанныеСтруктура", РезультатВыполнения.ВыходныеПараметры[4]);
			КонецЕсли;
			Если (РезультатВыполнения.ВыходныеПараметры.Количество() > 5) И РезультатВыполнения.ВыходныеПараметры[5] <> Неопределено Тогда
				СтруктураПараметров.Вставить("ФискальныеДанныеXMLСтрока", РезультатВыполнения.ВыходныеПараметры[5]);
			КонецЕсли;
			СтруктураПараметров.Вставить("ИдентификаторУстройства", Параметры.ИдентификаторУстройства);
			Если Параметры.Свойство("КассоваяСмена") Тогда
				СтруктураПараметров.Вставить("КассоваяСмена", Параметры.КассоваяСмена);
			КонецЕсли;
			СтруктураПараметров.Вставить("ВыполняемаяКоманда", Параметры.ВыполняемаяКоманда);
			Если Параметры.Свойство("ДополнительныеПараметры") Тогда
				СтруктураПараметров.Вставить("ДополнительныеПараметры", Параметры.ДополнительныеПараметры);
			КонецЕсли;
			
			МенеджерОборудованияВызовСервера.ПослеВыполненияКомандыФискальнымУстройством(СтруктураПараметров);
			
		КонецЕсли;
		
		Если Параметры.ВыполняемаяКоманда = "CheckFiscalization" И МенеджерОборудованияКлиентПовтИсп.ИспользуетсяПодсистемыФискальныхУстройств() Тогда
			
			МенеджерОборудованияВызовСервера.ИнкрементироватьТекущийНомерЧекаККТ(Параметры.ИдентификаторУстройства, Параметры.КассоваяСмена);
			
			ВремВходныеПараметры = Параметры.ВходныеПараметры; 
			ВремВыходныеПараметры = Неопределено;
			
			//Saby ++
			//Переберем все элементы массива, нароем структура со свойством в значении его - будет чекККМ
			НастройкиПользователя	= Saby_Core.ОбщиеНастройкиПрочитать();
			QRНаЧеке = Saby_Core.get_prop(НастройкиПользователя, "PrintQR",	Ложь);
			Если QRНаЧеке = Истина Тогда
				СсылкаНаЧек		= Неопределено;
				БаловНачислено	= 0;
				БалловНаКарте	= 0;
				Если ТипЗнч(РезультатВыполнения.ВыходныеПараметры) = Тип("Массив") Тогда
					Для Каждого ЗнчКл Из РезультатВыполнения.ВыходныеПараметры Цикл
						Если ТипЗнч(ЗнчКл) = Тип("Структура") Тогда
							Если ЗнчКл.Свойство("ДокументОснование") Тогда
								СсылкаНаЧек		= Saby_СвойстваИДопРеквизиты_Сервер.ПолучитьЗначениеСвойства(ЗнчКл.ДокументОснование, "Saby_СсылкаНаЧек");
								БалловНаКарте	= Saby_СвойстваИДопРеквизиты_Сервер.ПолучитьЗначениеСвойства(ЗнчКл.ДокументОснование, "Saby_БалловНаКарте");
								БаловНачислено	= Saby_СвойстваИДопРеквизиты_Сервер.ПолучитьЗначениеСвойства(ЗнчКл.ДокументОснование, "Saby_БалловНачислено");
								Прервать;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				
				Если СсылкаНаЧек <> Неопределено Тогда
					//Если использовался сервис и карта была применена, или если это не чек возврата
					
					СсылкаНаЧек = ?(СсылкаНаЧек = Неопределено, "", СсылкаНаЧек);
					Saby_ВрЗнч_2 = Новый Массив;
					//Исключим ошибку при формировании QR  кода
					СсылкаНаЧек = ?(СсылкаНаЧек = Неопределено, "https://online.sbus.ru", СсылкаНаЧек);
					БаловНачислено = ?(БаловНачислено = Неопределено, 0, БаловНачислено);
					
					Saby_ВрЗнч_2.Добавить( Новый Структура( "ШтрихКод, ТипШтрихкода, ШтрихКод", Истина, "QR", СсылкаНаЧек ) );
					Saby_ВрЗнч_2.Добавить( Новый Структура("ТекстоваяСтрока, Текст", Истина, "Начислено баллов: "+Формат(БаловНачислено, "ЧГ=0; ЧН=0")) );
					Saby_ВрЗнч_2.Добавить( Новый Структура("ТекстоваяСтрока, Текст", Истина, "Баллов на карте: "+Формат(БалловНаКарте, "ЧГ=0; ЧН=0")) );
					Saby_ВрЗнч_1 = Новый Массив;
					Saby_ВрЗнч_1.Добавить(Saby_ВрЗнч_2);
					ВремВходныеПараметры.НефискальныеДокументы.Добавить( Saby_ВрЗнч_2 );
				КонецЕсли;
			КонецЕсли;
			//Saby --
			
			Если ВремВходныеПараметры.НефискальныеДокументы.Количество() > 0 И РезультатВыполнения.Свойство("ОбработчикДрайвераМодуль") Тогда
				ОбработчикДрайвераМодуль = РезультатВыполнения.ОбработчикДрайвераМодуль;
				ОбъектДрайвера           = РезультатВыполнения.ОбъектДрайвера;
				ПодключенноеУстройство   = РезультатВыполнения.ПодключенноеУстройство;
				ПоддержкаАсинхронногоРежима = ОбработчикДрайвераМодуль.ПоддержкаАсинхронногоРежима();
				
				ВходныеПараметрыОперации = Новый Массив();
				ВходныеПараметрыОперации.Добавить(ВремВходныеПараметры.НефискальныеДокументы);
				
				Если ПоддержкаАсинхронногоРежима Тогда
					ОбработчикДрайвераМодуль.НачатьВыполнениеКоманды(Неопределено, "PrintTextDocument", ВходныеПараметрыОперации, 
						ОбъектДрайвера, ПодключенноеУстройство.Параметры, ПодключенноеУстройство.ПараметрыПодключения);
				Иначе
					ОбработчикДрайвераМодуль.ВыполнитьКоманду("PrintTextDocument", ВходныеПараметрыОперации, ВремВыходныеПараметры,
						ОбъектДрайвера, ПодключенноеУстройство.Параметры, ПодключенноеУстройство.ПараметрыПодключения);
				КонецЕсли;
				
				МенеджерОборудованияКлиентПереопределяемый.НачатьРассылкуНефискальныхДокументов(Параметры);
				
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		ТекстСообщения = НСтр("ru='При выполнении операции произошла ошибка: %ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", РезультатВыполнения.ВыходныеПараметры[1]);
	КонецЕсли;
	
	Если Параметры.ОповещениеПриЗавершении <> Неопределено Тогда
		РезультатОперации = ПараметрыВыполненияОперацииНаОборудовании(РезультатВыполнения.Результат, ТекстСообщения, Параметры.ИдентификаторУстройства);
		РезультатОперации.Вставить("ВыходныеПараметры", РезультатВыполнения.ВыходныеПараметры);
		
		Если РезультатВыполнения.Свойство("ДополнительныеПараметры") Тогда
			РезультатОперации.Вставить("ДополнительныеПараметры", РезультатВыполнения.ДополнительныеПараметры);
		КонецЕсли;
		
		ВыполнитьОбработкуОповещения(Параметры.ОповещениеПриЗавершении, РезультатОперации);
	КонецЕсли;
	
	НачатьОтключениеОборудованиеПоИдентификатору(, Параметры.УникальныйИдентификатор, Параметры.ИдентификаторУстройства);
	
КонецПроцедуры

