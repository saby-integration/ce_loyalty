
#Область include_base_ФормаРМК_Переменные
#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ДействиеПоискКарты = (Saby_Core.get_prop(Параметры, "ТолькоПоискКарты", Ложь) = Истина);
	Элементы.грПоискКарты.Видимость		= ДействиеПоискКарты;
	Элементы.грРасчётСкидок.Видимость	= Не ДействиеПоискКарты;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНадписиСочетанияКлавиш_Насервере( Saby_Настройки )
	Saby_Core.УстановитьКлавишиДляКомандыЭлемента( Элементы.КнопкаПоиск, 			"ПоискКарты", 			Saby_Настройки );
	Saby_Core.УстановитьКлавишиДляКомандыЭлемента( Элементы.СменаРежимаНакопления,	"СменаРежимаНакопления",Saby_Настройки );
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуТоваровДаннымиИзЧека(Saby_Данные)
	//Заполнение таблицы товаров чека
	ДокументСумма			= 0;
	ТоварыЧека.Очистить();
	ДанныеОТоварахЧека = Saby_Core.get_prop(Saby_Данные, "ТоварыЧека", Новый Массив);
	Для Каждого СтрокаТовара Из ДанныеОТоварахЧека Цикл
		СтрокаТовараПеренос 		= ТоварыЧека.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТовараПеренос, СтрокаТовара);
		СтрокаТовараПеренос.Сумма		= СтрокаТовараПеренос.КоличествоУпаковок * СтрокаТовараПеренос.Цена;
		СтрокаТовараПеренос.СтавкаНДС	= Saby_Сервисы_СерверПодКонфигурацию.ПолучитьСтавкуНДСИзСтрокиДокумента(СтрокаТовара.СтавкаНДС);
		СтрокаТовараПеренос.СуммаНДС	= Saby_Сервисы_СерверПодКонфигурацию.ПолучитьСуммуНДС(СтрокаТовараПеренос.КоличествоУпаковок, СтрокаТовараПеренос.Цена, Saby_Сервисы_СерверПодКонфигурацию.ПолучитьПроцентНДС(СтрокаТовараПеренос.СтавкаНДС), Saby_Данные.ЦенаВключаетНДС);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии( Отказ )
	ИспользоватьПодключаемоеОборудование		= Истина;
	ПоддерживаемыеТипыПодключаемогоОборудования = "СканерШтрихкода";
	
	ОповещенияПриПодключении = Новый ОписаниеОповещения("ПодключитьОборудованиеЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(ОповещенияПриПодключении, ЭтаФорма, "СканерШтрихкода");
	
	Saby_Настройки				= ЭтаФорма.ВладелецФормы.Saby_Настройки;
	Saby_Данные					= ЭтаФорма.ВладелецФормы.Saby_Данные;
	context_params				= ЭтаФорма.ВладелецФормы.context_params;
	ЗаполнитьТаблицуТоваровДаннымиИзЧека(Saby_Данные);
	
	Если context_params = Неопределено или Saby_Настройки = Неопределено Тогда
		ПоказатьОповещениеПользователя("Авторизация не выполнена!",,"Работа с сервисом лояльности невозможна.",,СтатусОповещенияПользователя.Важное);
	КонецЕсли;
	ОбновитьПредставлениеВведенныхДанных(Saby_Данные.КЛДанныеПоиска);
	
	Если Элементы.грРасчётСкидок.Видимость Тогда
		ЭтаФорма.ТекущийЭлемент	= Элементы.КнопкаКопитьБаллы;
		Если ПустаяСтрока( КартаДанныеПоискаЭкран ) Тогда
			ЭтаФорма.ТекущийЭлемент	= Элементы.КартаДанныеПоискаЭкран;
			КартаПредставление		= "";
		Иначе
			//Обновим инфу о карте, и посчитаем скидки
			КартаПредставление		= Saby_Данные.КЛФИО;
			КомандаПоиск(Неопределено);
		КонецЕсли;
		УстановитьНадписиСочетанияКлавиш_Насервере( Saby_Настройки );
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// ПодключаемоеОборудование
КонецПроцедуры

&НаКлиенте
Процедура СменаРежимаНакопления(Команда)
	ВидДействияСкидки = ?(ВидДействияСкидки = 0, 1, 0);
	ВидДействияСкидкиПриИзменении(Неопределено);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Функция БыстраяВыдачаКарты()
	КартаВыдана = Ложь;
	Попытка
		ДанныеКарты = Saby_Сервисы_Сервер.ВыдатьКартуЛояльности(
			context_params, 
			Новый Структура("НомерКарты", Saby_Данные.КЛДанныеПоиска)
		);
		КартаВыдана = Истина;
	Исключение
		ИнфоОбОшибкеВнутрВрем	=	ИнформацияОбОшибке();
		ОшибкаСтруктураВрем		=	Saby_Core.NewExtExceptionСтруктура(ИнфоОбОшибкеВнутрВрем);
		Saby_Core.ExtExceptionToJournal(ОшибкаСтруктураВрем);
		
		ДанныеКарты = Неопределено;
		
		ПоказатьОповещениеПользователя(
			"Расширение лояльности",
			,
			"Ошибка регистрации новой карты. ",
			БиблиотекаКартинок.Ошибка32,
			СтатусОповещенияПользователя.Важное,
		);
	КонецПопытки;
	Возврат КартаВыдана;
КонецФункции

&НаКлиенте
Процедура ВыдатьКарту(Команда)
	ЗакрытиеФормыВыдачи = Новый ОписаниеОповещения("ЗакрытиеФормыВыдачиКарты", ЭтаФорма, );
	ДП = Новый Структура("НомерКарты",  Saby_Данные.КЛДанныеПоиска);
	ОткрытьФорму("Обработка.SABY.Форма.ВыдачаКарты",ДП,ЭтаФорма,,,,ЗакрытиеФормыВыдачи, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеФормыВыдачиКарты(Результат, ДопПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КартаДанныеПоискаЭкран = Saby_Core.get_prop(Результат, "НомерКарты", "");
	//Обработаем введённые данные, аналагично работе в интерфейсе
	ПолеВводимоеЧислоПриИзменении(Неопределено);
	////Запуск поиска
	КомандаПоиск(Неопределено)	;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьФокусВвода()
	ТекущийЭлемент = Элементы.КартаДанныеПоискаЭкран;
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьСПередачейРезультата()
	//Сейчас обсчитываем и без пользователя
	
	//СтруктураОтвета	= Неопределено;
	//Если Не ПустаяСтрока(Saby_Данные.КЛНомер) Тогда
		СтруктураОтвета = Новый Структура("Saby_Данные", Saby_Данные);
	//КонецЕсли;
	Закрыть(СтруктураОтвета);
КонецПроцедуры

#КонецОбласти

//**************************** Saby

#Область ПоискКарытЛояльности

&НаКлиенте
Процедура ОбновитьПредставлениеВведенныхДанных(Данные)
	КартаПредставление	= "";
	КартаВидПредставление = "";
	Элементы.КнопкаВыдатьКарту.Видимость = Ложь;
	
	КартаДанныеПоискаЭкран	= Данные;
	Saby_Данные.Вставить("КЛДанныеПоиска", Saby_Сервисы_Сервер.ПодготоваитьСтрокуКПоискуКарты(Данные));
	РежимПоискаКарты = Saby_Сервисы_Сервер.ОпределитьРежимПоискаКарты( Saby_Данные.КЛДанныеПоиска );
	Если РежимПоискаКарты = 2 Тогда
		КартаДанныеПоискаЭкран	= "QR Код";
	ИначеЕсли РежимПоискаКарты = -1 Тогда
		КартаДанныеПоискаЭкран	= "";
		Saby_Данные.Вставить("КЛДанныеПоиска", КартаДанныеПоискаЭкран);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПредставлениеКомандыСписать(Saby_Данные)
	КомандаСписать	= ЭтаФорма.Команды.Найти("КомандаСписатьБаллы");
	Если КомандаСписать <> Неопределено Тогда
		Элементы.КнопкаСписатьБаллы.Заголовок = "Списать все баллы";
		Если (Saby_Данные.ДокументБалловДоступно) <> Saby_Данные.ДокументБалловСписать Тогда
			Элементы.КнопкаСписатьБаллы.Заголовок = 
			"Списать " +Формат(Saby_Данные.ДокументБалловСписать, "ЧГ=0; ЧН=0")+ "";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ПодключаемоеОборудование

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если Событие = "Штрихкод" или Событие = "ScanData" Тогда
		ОбновитьПредставлениеВведенныхДанных(Данные);
		УстановитьФокусВвода();
		НайтиКарту();
	КонецЕсли;
	
КонецПроцедуры

//**************************** Saby

&НаКлиенте
Процедура ПодключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	Если Не РезультатВыполнения.Результат Тогда
		//А мы не будем ни чего сообщать, пользователь уже видел сообщение об отсутствии сканера в форме РМК
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаПоиск(Команда)
	
	БалловВсего				= 0;
	БалловДоступно			= 0;
	БалловСписать			= 0;
	ДокументСумма			= 0;
	ДокументСкидка			= 0;
	ДокументСуммаСоСкидкой	= 0;
	
	Saby_Данные.ДокументБалловДоступно	= 0;
	Saby_Данные.ДокументВтчБаллами		= 0;
	Saby_Данные.ДокументСкидка			= 0;
	Saby_Данные.ДокументСумма			= 0;
	Saby_Данные.ДокументСуммаСоСкидкой	= 0;
	Saby_Данные.КЛБалловВсего			= 0;
	Saby_Данные.ЧекБалловНачислено		= 0;
	Saby_Данные.ЧекСсылкаУРЛ			= "";
	Saby_Данные.СписатьВсеБаллы			= Истина;
	
	Попытка
		НайтиКарту();
		Saby_Данные.ДокументБалловСписать	= Saby_Данные.КЛБалловВсего;
		Элементы.КнопкаПрименитьСкидки.Доступность = Истина;
	Исключение
		Saby_Данные.ДокументБалловСписать	= 0;
		ИнфоОбОшибке		= ИнформацияОбОшибке();
		ОшибкаСтруктура		= Saby_Core.NewExtExceptionСтруктура(ИнфоОбОшибке);
		Saby_Core.ExtExceptionToJournal(ОшибкаСтруктура);
		ОбработаннаяОшибка	=  Новый структура("data, status", ОшибкаСтруктура, "error");
		
		ПоказатьОповещениеПользователя(
		"Скидки не могут быть расчитаны.",
		,
		"Отсутствует доступ к сервису лояльности, Повторите попытку позже.",
		БиблиотекаКартинок.Ошибка32,
		СтатусОповещенияПользователя.Важное,);
		//TODO проверка на повторную авторизацию
		
		Saby_Core.ExtExceptionToJournal(ОшибкаСтруктура);
		Закрыть();
		Возврат;
	КонецПопытки;
	
	Если Элементы.грРасчётСкидок.Видимость Тогда
		ЗакрытьФорму	= Ложь;
		ЗначениеБалловДоРасчёта = Saby_Данные.ДокументБалловСписать;
		СписатьВсеБаллыВрем		= Saby_Данные.СписатьВсеБаллы;
		Saby_Данные.ДокументБалловСписать	= 0;
		Saby_Данные.СписатьВсеБаллы			= Ложь;
		Если Saby_Сервисы_Клиент.ПодготовитьДанныеИПересчитатьСкидки(ЭтаФорма, ТоварыЧека, ЗакрытьФорму ) Тогда
			//Обновим данные формы
			БалловВсего				= Saby_Данные.КЛБалловВсего;
			//А если клиента нет? TODO. КЛБалловВсего = 0 ,а скидка по лояльности есть/
			БалловДоступно			= Saby_Сервисы_Клиент.Saby_БалловДоступно(Saby_Данные);
			БалловСписать			= Saby_Сервисы_Клиент.Saby_БалловСписать(Saby_Данные);
			ДокументСумма			= Saby_Данные.ДокументСумма;
			ДокументСкидка			= Saby_Данные.ДокументСкидка;
			ДокументВТомЧислеБаллами= Saby_Данные.ДокументВтчБаллами;
			ДокументСуммаСоСкидкой	= Saby_Данные.ДокументСуммаСоСкидкой;
		КонецЕсли;
		Saby_Данные.ДокументБалловСписать	= ЗначениеБалловДоРасчёта;
		Saby_Данные.СписатьВсеБаллы			= СписатьВсеБаллыВрем;
		БалловСписать						= Saby_Данные.ДокументБалловСписать;

		Если ЗакрытьФорму Тогда
			//Закрыть();
		КонецЕсли;
		ВидДействияСкидки = 0;
		КоличествоБалловСписатьПриИзменении(Неопределено);
	КонецЕсли;
	
	Если Элементы.КнопкаВыдатьКарту.Видимость Тогда
		ВыдатьКарту(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция НайтиКарту( )
	Элементы.КнопкаВыдатьКарту.Видимость				= Ложь;
	Элементы.КнопкаПрименитьСкидки.КнопкаПоУмолчанию	= Истина;
	Отказ				= Ложь;
	//Получить инфу о скидках для товаров чека
	ДанныеКарты			= Saby_Сервисы_Клиент.НайтиКартуЛояльности( context_params, Saby_Данные.КЛДанныеПоиска, Отказ );
	Если Не ДанныеКарты.МожноВыдать И ДанныеКарты.КартаВыпущена И ДанныеКарты.ФИО = Неопределено Тогда
		ДанныеКарты.ФИО = "Клиент";
	КонецЕсли;
	Если ДанныеКарты.ФИО = Неопределено Тогда
		ДанныеКарты.ФИО					= "Карта не найдена.";
		ДанныеКарты.НомерКарты			= "";
		ДанныеКарты.КоличествоБаллов	= 0;
	КонецЕсли;
	Saby_Данные.Вставить("КЛФИО",			ДанныеКарты.ФИО);
	Saby_Данные.Вставить("КЛНомер",			ДанныеКарты.НомерКарты);
	Saby_Данные.Вставить("КЛБалловВсего",	ДанныеКарты.КоличествоБаллов);
	Saby_Данные.Вставить("КЛНазваниеКарты", ДанныеКарты.НазваниеКарты);
	Saby_Данные.Вставить("КЛДанныеКлиента", ДанныеКарты.ДанныеКлиента);
	КартаПредставление		= Saby_Данные.КЛФИО;
	КартаВидПредставление	= Saby_Данные.КЛНазваниеКарты;
	
	Если ДанныеКарты.МожноВыдать И НЕ ДанныеКарты.КартаВыпущена Тогда
		Элементы.КнопкаВыдатьКарту.Видимость 			= Истина;
		Элементы.КнопкаВыдатьКарту.КнопкаПоУмолчанию	= Истина;
	КонецЕсли;
	
	Элементы.КартаПредставление.ЦветТекста = WebЦвета.Черный;
	Если КартаПредставление = "Карта не найдена." Тогда
		Элементы.КартаПредставление.ЦветТекста = WebЦвета.Красный;
	КонецЕсли;		
	
	Элементы.КартаВидПредставление.ЦветТекста = WebЦвета.Черный;
	Если КартаПредставление = "Карта не найдена." И ДанныеКарты.МожноВыдать Тогда
		Элементы.КартаПредставление.ЦветТекста = WebЦвета.Черный;
		Элементы.КартаВидПредставление.ЦветТекста = WebЦвета.Зеленый;
		Saby_Данные.Вставить("КЛФИО",			ДанныеКарты.НазваниеКарты);
		Saby_Данные.Вставить("КЛНазваниеКарты", "Новая карта. Требуется выдача");
	КонецЕсли;		
	
	КартаПредставление		= Saby_Данные.КЛФИО;
	КартаВидПредставление	= Saby_Данные.КЛНазваниеКарты;
КонецФункции	

&НаКлиенте
Процедура ПрименитьСкидки(Команда)
	
	Если НЕ Элементы.КнопкаПрименитьСкидки.Доступность Тогда
		//1С не правильно отрабатывает потерю фокуса.
		Возврат;
	КонецЕсли;
	
	Если Элементы.КнопкаВыдатьКарту.Видимость Тогда
		//Создание карты без указания владельца
		Если БыстраяВыдачаКарты() Тогда
			КомандаПоиск(Неопределено);	
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Saby_Данные.Вставить("СписатьВсеБаллы", БалловСписать >= БалловВсего);
	Saby_Данные.Вставить("ДокументБалловСписать", БалловСписать);
	Если ВидДействияСкидки = 0 Тогда
		БалловСписать		= 0;
		Saby_Данные.Вставить("СписатьВсеБаллы", Ложь);
		Saby_Данные.Вставить("ДокументБалловСписать", БалловСписать);
	КонецЕсли;			
	Если Saby_Сервисы_Клиент.ПодготовитьДанныеИПересчитатьСкидки(ЭтаФорма, ТоварыЧека ) Тогда
		ЗакрытьСПередачейРезультата();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолеВводимоеЧислоПриИзменении(Элемент)
	Saby_Данные.Вставить("КЛФИО",			"");
	Saby_Данные.Вставить("КЛНомер",			"");
	Saby_Данные.Вставить("КЛБалловВсего",	"");
	Saby_Данные.Вставить("КЛДанныеПоиска",	"");
	//Заблокируем применение скидок при изменении номера
	//Разблокируем после отработки метода поиска карты
	Элементы.КнопкаПрименитьСкидки.Доступность = Ложь;
	ОбновитьПредставлениеВведенныхДанных(КартаДанныеПоискаЭкран);
	Если ПустаяСтрока(Saby_Данные.КЛДанныеПоиска) Тогда
		//Но разблокируем, если карты нет. т.к. скидки можно дать и без карты 
		Элементы.КнопкаПрименитьСкидки.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КоличествоБалловСписатьПриИзменении(Элемент)
	БалловСписать = Макс(БалловСписать, 0);
	БалловСписать = Мин(БалловСписать, БалловДоступно);
	Если Элемент <> Неопределено Тогда
		Если БалловСписать = 0 Тогда
			ВидДействияСкидки = 0;
		Иначе
			ВидДействияСкидки = 1;
		КонецЕсли;
	КонецЕсли;
	Saby_Данные.Вставить("ДокументБалловСписать", БалловСписать);
	Saby_Данные.Вставить("СписатьВсеБаллы", Saby_Сервисы_Клиент.Saby_СписатьВсеБаллы(Saby_Данные) );
	ОбновитьПредставлениеКомандыСписать(Saby_Данные);
КонецПроцедуры

&НаКлиенте
Процедура БалловСписатьИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	НСтроки = 0; НКолонки = 0; КСтроки = 0; ПозицияКурсора = 0;
	Элементы.БалловСписать.ПолучитьГраницыВыделения(НСтроки, НКолонки, КСтроки, ПозицияКурсора);
	
	Попытка
		ТекстЧислом = Число( СтрЗаменить(СтрЗаменить(Текст, ",", "."), Символы.НПП, "") );
	Исключение
		ТекстЧислом = 0;
	КонецПопытки;
	
	БалловСписать = ТекстЧислом;
	Если БалловСписать > БалловДоступно Тогда
		ПозицияКурсора = СтрДлина(Формат(БалловДоступно, "ЧГ=0;ЧДЦ=2;ЧН=0.00"))-2;
	КонецЕсли;
	
	БалловСписать = Мин(БалловСписать, БалловДоступно);
	Если БалловСписать = 0 Тогда
		ВидДействияСкидки = 0;
	Иначе
		ВидДействияСкидки = 1;
	КонецЕсли;
	
	Saby_Данные.Вставить("ДокументБалловСписать", БалловСписать);
	ОбновитьПредставлениеКомандыСписать(Saby_Данные);
	Элементы.БалловСписать.УстановитьГраницыВыделения(ПозицияКурсора, ПозицияКурсора);
КонецПроцедуры

&НаКлиенте
Процедура ВидДействияСкидкиПриИзменении(Элемент)
	// Пока не задейсвуем код
	
	//Если ВидДействияСкидки = 0 Тогда
	//	БалловСписать = 0;
	//ИначеЕсли ВидДействияСкидки = 1 Тогда
	//	БалловСписать = БалловДоступно;
	//КонецЕсли;
КонецПроцедуры



&НаКлиенте
Процедура ОбработатьОтветВопросаОбОтсутсвующейКарте(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗакрытьСПередачейРезультата();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКарту(Команда)
	Если ПустаяСтрока(Saby_Данные.КЛНомер) Тогда
		Оповещение = Новый ОписаниеОповещения("ОбработатьОтветВопросаОбОтсутсвующейКарте", ЭтаФорма);
		ПоказатьВопрос(Оповещение,
		"Продолжить возврат товара без карты?
		|Да     - Продолжить без карты лояльности..
		|Нет    - Продолжить поиск карты.
		|",
		РежимДиалогаВопрос.ДаНет,
		0,
		КодВозвратаДиалога.Да,
		"Карта лояльности отсутствует."
		);
		СтандартнаяОбработка = Ложь;
		Отказ = Истина;
		Возврат;
	Иначе
		ЗакрытьСПередачейРезультата();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

//МодульФормыПоискДисконтнойКарты
