
&НаСервере
Функция Saby_ПолучитьМассивТоваровЧека(ЭтоВозврат = Ложь)
	ТоварыКРасчёту = Saby_ФормаСервер.ТаблицаЗначенийВМассивСтруктур(Объект.Товары.Выгрузить(), 
		"Номенклатура,КоличествоУпаковок,Цена,Сумма,СтавкаНДС,СуммаРучнойСкидки" //Безпробелов
		);
	Для каждого ТовараСтрока Из ТоварыКРасчёту Цикл
		Если ЭтоВозврат Тогда
			ТовараСтрока.Цена		= ТовараСтрока.Сумма / ТовараСтрока.КоличествоУпаковок; //TODO
		КонецЕсли;
		ТовараСтрока.Вставить("ЦенаВручную", ТовараСтрока.Цена);
		Если ТовараСтрока.КоличествоУпаковок > 0 Тогда
			ТовараСтрока.Вставить("ЦенаВручную", ТовараСтрока.Цена - (ТовараСтрока.СуммаРучнойСкидки / ТовараСтрока.КоличествоУпаковок) );
			ТовараСтрока.Удалить("СуммаРучнойСкидки");
		КонецЕСли;
	КонецЦикла;
	Возврат ТоварыКРасчёту;
КонецФункции

&НаКлиенте
Процедура Saby_ОткрытьФормуПоискКартыЛояльности_ПослеЗакрытияФормыНастроек(Результат, Параметры) Экспорт
	Если Результат <> Неопределено Тогда
		Saby_ОткрытьФормуПоискКартыЛояльности(Неопределено, Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьОповещениеПриНаличииСессии_ПослеАутентификации(Результат, Параметры) Экспорт
	Если Результат <> Неопределено Тогда
		context_params = Результат;
		Saby_Core.НастройкиПодключенияЗаписать(context_params);
		
		ПродолжитьМетод = Saby_Core.get_prop(Параметры, "Метод", "");
		Если ПродолжитьМетод = "ОткрытиеФормыКарты" Тогда
			Saby_ОткрытьФормуПоискКартыЛояльности(Неопределено, Ложь);
		ИначеЕсли ПродолжитьМетод = "РассчётСкидок" Тогда
			Saby_НазначитьАвтоматическиеСкидкиКлиент(Ложь, Ложь);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция Saby_ПроверитьКорректностьЗаполненияДанных()
	Результат = Новый Структура("ЕстьТовары, УказаныЦены, УказаноКоличество, Ошибка", Истина, Истина, Истина, Ложь);
	Если НЕ Объект.Товары.Количество() Тогда
		Результат.ЕстьТовары = Ложь;
	КонецЕсли;
	
	КоличествоУказаноВКаждойСтроке	= Истина;
	ЦенаУказанаВКаждойСтроке		= Истина;
	Для Каждого СтрокаТовара Из Объект.Товары Цикл
		КоличествоУказаноВКаждойСтроке	= (КоличествоУказаноВКаждойСтроке И СтрокаТовара.КоличествоУпаковок > 0);
		ЦенаУказанаВКаждойСтроке 		= (ЦенаУказанаВКаждойСтроке И СтрокаТовара.Цена > 0);
	КонецЦикла;
	Результат.УказаныЦены = ЦенаУказанаВКаждойСтроке;
	Результат.УказаноКоличество = КоличествоУказаноВКаждойСтроке;
	
	Результат.Ошибка = 	Не Результат.УказаныЦены 
							ИЛИ 
						Не Результат.УказаноКоличество 
							ИЛИ 
						Не Результат.ЕстьТовары;
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура Saby_ОткрытьФормуПоискКартыЛояльности(Элемент, СтандартнаяОбработка) Экспорт
	СтандартнаяОбработка = Ложь;

	context_param = Saby_Core.ПроверитьНаличиеПараметровПодключения();
	Если context_param = Неопределено Тогда
		ДопПараметры = Новый Структура("Метод", "ОткрытиеФормыКарты");
		Оповещение = Новый ОписаниеОповещения("ЗапуститьОповещениеПриНаличииСессии_ПослеАутентификации", ЭтаФорма, ДопПараметры);
		ОткрытьФорму("Обработка.SABY.Форма.Вход",,,,,, Оповещение);
		Возврат;
	КонецЕсли;
	
	Saby_Данные.Вставить("ДокументЭтоВозврат", Saby_ЭтоВозврат_Клиент() );
	Если Saby_Данные.ДокументЭтоВозврат Тогда Возврат; КонецЕсли;
	
	РезультатПроверки = Saby_ПроверитьКорректностьЗаполненияДанных();
	Если НЕ РезультатПроверки.ЕстьТовары Тогда
		ПоказатьОповещениеПользователя(
		"Ошибка заполнения данных продажи.",
		,
		"В чеке отсутствуют товары, расчёт скидки невозможен.",
		БиблиотекаКартинок.Ошибка32,
		СтатусОповещенияПользователя.Важное,);
		Возврат;
	КонецЕсли;
	
	ОшибкаЗаполнения				= Ложь;
	Если НЕ РезультатПроверки.УказаноКоличество Тогда
		ПоказатьОповещениеПользователя(
		"Ошибка заполнения данных продажи.",
		,
		"Не у всех товаров указано количество, расчёт скидки невозможен.",
		БиблиотекаКартинок.Ошибка32,
		СтатусОповещенияПользователя.Важное,);
		ОшибкаЗаполнения				= Истина;
	КонецЕсли;
	Если НЕ РезультатПроверки.УказаныЦены Тогда
		ПоказатьОповещениеПользователя(
		"Ошибка заполнения данных продажи.",
		,
		"Не у всех товаров указана цена, расчёт скидки невозможен.",
		БиблиотекаКартинок.Ошибка32,
		СтатусОповещенияПользователя.Важное,);
		ОшибкаЗаполнения				= Истина;
	КонецЕсли;
	Если РезультатПроверки.Ошибка Тогда
		Возврат;
	КонецЕсли;
		
	ТоварыДокумента	= Saby_ПолучитьМассивТоваровЧека(Saby_Данные.ДокументЭтоВозврат);
	Saby_ФормаКлиент.Saby_ОткрытьФормуПоискаКартыЛояльности(ЭтаФорма, ТоварыДокумента, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура Saby_ПослеЗакрытияФормыВыборкаКартыСкидки(РезультатОбработки, ДополнительныеПараметры) Экспорт
	_Saby_ПослеЗакрытияФормыВыборкаКартыСкидки(РезультатОбработки, ДополнительныеПараметры);
КонецПроцедуры

&НаКлиенте
Процедура Saby_ЗакрытиеЧекаККМнаБЛ(ЧекККМСсылка) Экспорт
	РезультатЗакрытияЧека	= Новый Структура;
	ПараметрыЗакрытия = Новый Структура("ЧекККМСсылка", ЧекККМСсылка);
	Если НЕ Saby_Сервисы_Клиент.ПоставитьДокументВОчередьИОтправить(context_params, ПараметрыЗакрытия, РезультатЗакрытияЧека ) Тогда
		ПоказатьОповещениеПользователя(
		"Ошибка закрытия документа на БЛ.",
		,
		"Обратитесь в тех поддержку СБИС.",
		БиблиотекаКартинок.Ошибка32,
		СтатусОповещенияПользователя.Важное,);
		
		ИмяСобытия = "Ошибка закрытия документа на БЛ.";
		ПредставлениеУровня = "Ошибка";
		Комментарий = "Обратитесь в тех поддержку СБИС."; 
		ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации(ИмяСобытия, ПредставлениеУровня, Комментарий,,Истина);
	КонецЕсли;
КонецПроцедуры

