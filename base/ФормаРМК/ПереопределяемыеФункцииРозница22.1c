
&НаКлиенте
&Перед("ПробитьЧекККМ")
Процедура Saby_ПробитьЧекККМ_Перед(ОповещениеПриЗавершении, ЧекККМСсылка, КассаККМ, ПараметрыЗаполнения)
	//Запишем доп реквизиты в документ чек
	Saby_СохранитьДополнительныеРеквизиты(ЧекККМСсылка, Saby_Данные, context_params); //Тут сохранение начисленных баллов
КонецПроцедуры

&НаСервере
Функция Saby_ПолучитьДокОстнование(ЧекККМСсылка)
	Возврат ЧекККМСсылка.ЧекККМПродажа;
КонецФункции

&НаКлиенте
&После("ПробитьЧекККМ")
Процедура Saby_ПробитьЧекККМ_После(ОповещениеПриЗавершении, ЧекККМСсылка, КассаККМ, ПараметрыЗаполнения)
	Если (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Продажа")) Тогда
		Если Saby_Данные.ДокументЭтоВозврат Тогда
			//Для чека возврата укажем Номер применённой карты, взяв его у документа основания
			Saby_Данные.КЛНомер		= Saby_СвойстваИДопРеквизиты_Сервер.ПолучитьЗначениеСвойства(Saby_ПолучитьДокОстнование(ЧекККМСсылка), "Saby_КартаЛояльности");
			Saby_СвойстваИДопРеквизиты_Сервер.УстановитьЗначениеСвойства(ЧекККМСсылка, "Saby_КартаЛояльности",	Saby_Данные.КЛНомер);
			Saby_СвойстваИДопРеквизиты_Сервер.УстановитьЗначениеСвойства(ЧекККМСсылка, "Saby_ЧекККМУид", 		Saby_Данные.ЧекИд);
		КонецЕсли;
		Saby_ЗакрытиеЧекаККМнаБЛ(ЧекККМСсылка);
	КонецЕсли;	
	Saby_ИнициализацияПеременных();
	Saby_ОбновитьПредставлениеКарты();
КонецПроцедуры

&НаКлиенте
&После("ОповещениеОткрытьФормуВыбораЧекаПриВозврате")
Процедура Saby_ОповещениеОткрытьФормуВыбораЧекаПриВозврате(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт
	_ЧекККМ = Saby_Core.get_prop(РезультатОткрытияФормы, "ЧекККМ");
	Если РезультатОткрытияФормы = Неопределено или _ЧекККМ = Неопределено Тогда
		Saby_ДокументОснования = Неопределено;
	Иначе
		Saby_Данные				= Saby_Сервисы_Клиент.Saby_ИнициализацияПеременных();
		Saby_ИнициализацияПеременных();
		Saby_Данные.Вставить("ДокументЭтоВозврат",	Истина);
		Saby_ДокументОснования = Saby_СвойстваИДопРеквизиты_Сервер.ПолучитьЗначениеСвойства(_ЧекККМ, "Saby_ЧекККМУид");
	КонецЕсли;
КонецПроцедуры

