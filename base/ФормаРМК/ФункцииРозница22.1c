
&НаКлиенте
Процедура _Saby_ПриОткрытииПосле()
КонецПроцедуры

&НаКлиенте
Процедура _Saby_ПослеЗакрытияФормыВыборкаКартыСкидки(РезультатОбработки, ДополнительныеПараметры)
	Saby_Карта	= РезультатОбработки;
	Saby_ДанныеВрем	= Saby_Core.get_prop(РезультатОбработки, "Saby_Данные");
	Если Saby_ДанныеВрем	= Неопределено Тогда
		//Окно поиска закрыли крестиком, действий ни каких не требуется
		//Т.к. на форме могли использовать карту. и она почему то запоминается навсегда
		// поэтому сбросим идентификатор временного документа
		Saby_Данные.Вставить("ЧекИд", СокрЛП(Новый УникальныйИдентификатор()) );
	Иначе
		Saby_Данные = Saby_ДанныеВрем;
	КонецЕсли;

	
	Если Saby_Данные.ДокументЭтоВозврат = Истина Тогда
		//Очистим данные, они в возврате не нужны
		Saby_Данные.Вставить("КЛБалловВсего",			0);
		Saby_Данные.Вставить("ДокументСумма",			0);
		Saby_Данные.Вставить("ДокументСуммаСоСкидкой",	0);
		Saby_Данные.Вставить("ДокументСкидка",			0);
		Saby_Данные.Вставить("ДокументВтчБаллами",		0);
		Saby_Данные.Вставить("ДокументБалловСписать",	0);
		Saby_Данные.Вставить("ДокументБалловДоступно",	0);
		
	КонецЕсли;
	
	Saby_Карта	= Saby_Core.get_prop(Saby_Данные, "КЛНомер", "КартаОтсутствует");
	Если Saby_Карта	= "" Тогда
		Saby_Карта	= "КартаОтсутствует";
	КонецЕсли;
	Saby_ВыполняемаяКоманда = Неопределено;
	
	Saby_ОбновитьПредставлениеКарты();
	Saby_НазначитьАвтоматическиеСкидкиКлиент(Неопределено, Неопределено);
КонецПроцедуры

&НаСервере
Процедура Saby_СоздатьРеквизитыИЭлементыФормыНазначитьДействия()
	Saby_ФормаСервер.Saby_СоздатьРеквизитыИЭлементыФормыНазначитьДействия(ЭтаФорма, "ГруппаСумм", "СуммаСкидки");
КонецПроцедуры

&НаСервере
Функция Saby_ПолучитьОрганизацию() Экспорт
	Возврат Saby_Сервисы_Сервер.ПолучитьОрганизацию(ЭтаФорма);
КонецФункции

&НаСервере
Функция Saby_ПолучитьМагазин() Экспорт
	Возврат Объект.Магазин;
КонецФункции

&НаСервере
Функция Saby_ПолучитьСклад() Экспорт
	Возврат СкладПродажиПоУмолчанию;
КонецФункции

&НаКлиенте
Функция Saby_ЭтоВозврат_Клиент() Экспорт
	Возврат Saby_ЭтоВозврат();
КонецФункции
&НаСервере
Функция Saby_ЭтоВозврат() Экспорт
	Возврат Saby_ЭтоВозврат_Сервер(Объект);
КонецФункции
&НаСервере
Функция Saby_ЭтоВозврат_Сервер(Объект) Экспорт
	Возврат Saby_Сервисы_СерверПодКонфигурацию.ЭтоВозврат(Объект);
КонецФункции

&НаКлиенте
Процедура Saby_ОбновитьФорму_()
	ОбновитьФорму();
КонецПроцедуры

&НаКлиенте
&После("ОбновитьФорму")
Процедура Saby_ОбновитьФорму()
КонецПроцедуры

&НаКлиенте
Процедура Saby_ОтменитьРучныеСкидки_()
	ОтменитьРучныеСкидки();
КонецПроцедуры

&НаКлиенте
&Вместо("НазначитьАвтоматическиеСкидкиКлиент")
Процедура Saby_НазначитьАвтоматическиеСкидкиКлиент(ТолькоСообщенияПослеОформления = Ложь, НеВыводитьСообщения = Ложь, ПараметрыДляОплаты = Неопределено)
	context_param = Saby_Core.ПроверитьНаличиеПараметровПодключения();
	Если context_param = Неопределено Тогда
		ДопПараметры = Новый Структура("Метод", "РассчётСкидок");
		Оповещение = Новый ОписаниеОповещения("ЗапуститьОповещениеПриНаличииСессии_ПослеАутентификации", ЭтаФорма, ДопПараметры);
		ОткрытьФорму("Обработка.SABY.Форма.Вход",,,,,, Оповещение);
		Возврат;
	КонецЕсли;
	
	Saby_НазначитьАвтоматическиеСкидкиОбщая();
	//Строка ниже это --- НазначитьРучнуюСкидку( Saby_СуммаСкидки ); С суммой - 0
	ТаблицаСкидок = Saby_Core.get_prop(Saby_Данные, "ДокументСкидки", Новый Массив);
	Saby_ЗаполнитьСкидки_Сервер(ТаблицаСкидок);
	Saby_ОбновитьФорму_();
КонецПроцедуры

&НаКлиенте
Процедура Saby_ЗаполнитьСкидки_Сервер( МассивСкидок )
	Если ТипЗнч(МассивСкидок) = Тип("Массив") И МассивСкидок.Количество() > 0 Тогда
		Saby_ОтменитьРучныеСкидки_();
		ТоварыСчёт = 0;
		Для Каждого СтрокаТовСкидки Из МассивСкидок Цикл
			//Мы же верим бакенду, что количество строк таблицы товаров соответствует количеству строк в массиве скидок
			//и они соответсвуют друг другу

			//Аварийный выход! - Вырви шнур, выдави стекло
			Если ТоварыСчёт+1 > Объект.Товары.Количество() Тогда Прервать; КонецЕсли;
			СтрокаРасчёта = Объект.Товары[ТоварыСчёт];
			ТоварыСчёт = ТоварыСчёт + 1;

			//Еще раз убедимся, что всё верно
			Если СтрокаТовСкидки.Номенклатура <> СтрокаРасчёта.Номенклатура Тогда Продолжить; КонецЕсли;

			СтрокаРасчёта.СуммаРучнойСкидки	= СтрокаТовСкидки.СуммаСкидки;
			Если СтрокаТовСкидки.Сумма = 0  Тогда
				//Так мы узнаем, что была - 100% оплата баллами, спишем всю сумму,
				//Сумма может быть с копейками, баллы всегда целое число. в этом случае у нас останутся копейки к оплате
				СтрокаРасчёта.СуммаРучнойСкидки	= СтрокаРасчёта.Сумма;
			КонецЕсли;

			//СтрокаРасчёта.Сумма		= СтрокаРасчёта.КоличествоУпаковок * СтрокаРасчёта.Цена;
			СтруктураДействий	= Новый Структура(
				"ПересчитатьСумму, ПересчитатьСуммуНДС, ПересчитатьСуммуСУчетомРучнойСкидки, ПересчитатьПроцентРучнойСкидки",
				Новый Структура(),
				Новый Структура("ЦенаВключаетНДС", Объект.ЦенаВключаетНДС),
				Новый Структура("Очищать, ПересчитыватьСуммуСкидки", Ложь, Ложь),
				Новый Структура(),
			);
			ОбработкаТабличнойЧастиТоварыКлиент.ПриИзмененииРеквизитовВТЧКлиент("Товары", СтрокаРасчёта, СтруктураДействий, КэшированныеЗначения);
			Объект.СуммаДокумента	= ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСуммуДокумента(Объект["Товары"], Объект.ЦенаВключаетНДС);
			ОбработкаТабличнойЧастиТоварыКлиентСервер.ЗаполнитьСуммуВсегоВТаблице( Объект.Товары, Объект.ЦенаВключаетНДС );
		КонецЦикла;
	КонецЕсли;
	Объект.СкидкиРассчитаны	= Истина;
КонецПроцедуры

&НаКлиенте
&Вместо("ОплатитьТовары")
Процедура Saby_ОплатитьТовары(ИмяФормыОплаты, ОплатаПлатежнойКартой = Неопределено, Печать = Ложь)
	Saby_Данные.Вставить("ДокументЭтоВозврат", Saby_ЭтоВозврат_Клиент() );
	Если Saby_Данные.ИзменилсяСостав Или Saby_Данные.ДокументЭтоВозврат Тогда
		ТоварыДокумента	= Saby_ПолучитьМассивТоваровЧека(Saby_Данные.ДокументЭтоВозврат);
		ЧекВозврата = ?(ЗначениеЗаполнено(Объект.ЧекККМПродажа), Объект.ЧекККМПродажа, Неопределено );
		Saby_Данные.Вставить("ДокументОснованиеСсылка",	ЧекВозврата);
		Saby_Сервисы_Клиент.ПодготовитьДанныеИПересчитатьСкидки(ЭтаФорма, ТоварыДокумента, ,Saby_Данные);
	КонецЕсли;
	ПродолжитьВызов(ИмяФормыОплаты, ОплатаПлатежнойКартой, Печать);
КонецПроцедуры

&НаКлиенте
&Вместо("ВыполнитьЧО08ОплатаБонусами")
Процедура Saby_ВыполнитьЧО08ОплатаБонусами()
	//Бонусные баллы вводятся на форме поиска карты лояльности
КонецПроцедуры
	
