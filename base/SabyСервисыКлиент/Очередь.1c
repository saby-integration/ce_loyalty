
Функция ЗакрытьДокументы( context_params = Неопределено, ДополнительныйДокументСсылка = Неопределено,  Количестов = 1 ) Экспорт
	
	РезультатЗакрытияДок = Новый Массив;
	
	мДокументов = Saby_Сервисы_Сервер.ПолучитьДокументыКОтправке( Количестов, ДополнительныйДокументСсылка );
	ОснРевизиытДокументов = Saby_Сервисы_Сервер.ПолучитьОсновныеРевизиытДокументов( мДокументов );
	ДанныеСменИОборудования = Saby_Сервисы_Сервер.ПолучитьДаннеДокументаСменыИРегНомер( мДокументов );
	
	Для Каждого ЗакрываемыйДокумент Из мДокументов Цикл
		
		Отказ	= Ложь;
		
		ДанныеСменыИОборудования = ДанныеСменИОборудования[ЗакрываемыйДокумент.Ссылка];
		
		Saby_КартаЛояльности	= Saby_СвойстваИДопРеквизиты_Сервер.ПолучитьЗначениеСвойства(ЗакрываемыйДокумент.Ссылка, "Saby_КартаЛояльности");
		Saby_ЧекККМ_УИд			= Saby_СвойстваИДопРеквизиты_Сервер.ПолучитьЗначениеСвойства(ЗакрываемыйДокумент.Ссылка, "Saby_ЧекККМУид");
		
		//БЛ не переваривает Числа. поэтому суммы строками
		СуммаНал			= ?(ДанныеСменыИОборудования.СуммаНал = "0", Неопределено, ДанныеСменыИОборудования.СуммаНал);
		СуммаБезНал			= ?(ДанныеСменыИОборудования.СуммаБезНал = "0", Неопределено, ДанныеСменыИОборудования.СуммаБезНал);
		Если СуммаНал = Неопределено И СуммаБезНал = Неопределено Тогда СуммаНал = 0; КонецЕсли;
		
		УчПолитикаОрг		= Saby_Сервисы_Сервер.ПолучитьУчетнуюПолитикуОрганизацииИМагазинов( 
													ОснРевизиытДокументов[ЗакрываемыйДокумент.Ссылка]["Организация"],
													ОснРевизиытДокументов[ЗакрываемыйДокумент.Ссылка]["Магазин"],
													ОснРевизиытДокументов[ЗакрываемыйДокумент.Ссылка]["Склад"],
													ОснРевизиытДокументов[ЗакрываемыйДокумент.Ссылка]["Дата"] );
		КодСН				= УчПолитикаОрг[ОснРевизиытДокументов[ЗакрываемыйДокумент.Ссылка]["Магазин"]][ОснРевизиытДокументов[ЗакрываемыйДокумент.Ссылка]["Склад"]]["КодСН"];
		
		ПараметрыМетода	= Новый Структура("Объект", 
		Новый Структура("ИдПодключения, Название, ИдИС, СуммаНал, СуммаБезНал, НомерЧека, КодСН, ДанныеXML, НашаОрганизация, Смена, Касса",
		context_params.ConnectionId,
		"ЗакрытиеПродажи",
		Saby_ЧекККМ_УИд,
		СуммаНал,
		СуммаБезНал,
		ДанныеСменыИОборудования.НомерЧекаККМ,
		КодСН,
		ДанныеСменыИОборудования.ДанныеXML,
		Новый Структура("ИдИС", СокрЛП(ДанныеСменыИОборудования.Организация.УникальныйИдентификатор()) ),
		Новый Структура("ОткрытиеСмены, ИдИС, Номер",
		Формат(ДанныеСменыИОборудования.ДатаОткрытия, "ДЛФ=DT"),
		СокрЛП(ДанныеСменыИОборудования.КассоваяСмена.УникальныйИдентификатор()),
		Формат(ДанныеСменыИОборудования.КассоваяСменаНомер, "ЧГ=0"),
		),
		Новый Структура("РегистрационныйНомерККМ", ДанныеСменыИОборудования.РегистрационныйНомерККТ),
		КодСН,                                                               
		),
		);
		
		Если ЗначениеЗаполнено(ЗакрываемыйДокумент.ДокОснование) Тогда
			Saby_ДокументОснование= Saby_СвойстваИДопРеквизиты_Сервер.ПолучитьЗначениеСвойства(ЗакрываемыйДокумент.ДокОснование, "Saby_ЧекККМУид");
			Если ЗначениеЗаполнено(Saby_ДокументОснование) Тогда
				ПараметрыМетода.Объект.Вставить("ДокументОснование", Новый Структура("ИдИС", Saby_ДокументОснование));
			КонецЕсли;
		КонецЕсли;
		
		ВозврЗНЧ		= Новый Структура("error, message", Ложь, "");
		Попытка
			Результат = Saby_Сервисы_Сервер.ЗакрытьДокументы( context_params, ПараметрыМетода );
		Исключение
			Отказ				= Истина;
			ИнфоОбОшибке		= ИнформацияОбОшибке();
			ОшибкаСтруктура		= Saby_Core.NewExtExceptionСтруктура(ИнфоОбОшибке);
			ВозврЗНЧ.error		= Истина;
			ВозврЗНЧ.message	= ОшибкаСтруктура.detail;
			Saby_Core.ExtExceptionToJournal(ОшибкаСтруктура);
		КонецПопытки;
		
		Если Не Отказ И ТипЗнч(Результат) = Тип("Соответствие") и (Результат["error"] <> Неопределено) Тогда
			ВозврЗНЧ.error		= Истина;
			ВозврЗНЧ.message	= "Ошибка при закрытии/регистрации продажи на сервере.";
		КонецЕсли;
		РезультатЗакрытияДок.Добавить( ВозврЗНЧ );
		
	КонецЦикла;
	
	Возврат РезультатЗакрытияДок;
КонецФункции

Функция РассчитатьДокументы( context_params = Неопределено, ДанныеККТЧекККМ, Количество = 1, Отказ ) Экспорт
	
	Если context_params	= Неопределено Тогда
		context_params	= Saby_Сервисы_Сервер.Получить_context_params();
	КонецЕсли;
	
	Если ТипЗнч( ДанныеККТЧекККМ ) = Тип("Структура") Тогда
		//Уже посчитано, ни чего не делаем
		ПараметрыОбъектов	= ДанныеККТЧекККМ;
	Иначе
		ЧекиКРасчёту		= Saby_Сервисы_Сервер.ПолучитьДокументыКОтправке(Количество, );
		ЕщеДокумент			= ЧекиКРасчёту.Добавить();
		ЕщеДокумент.ЧекККМ	= ДанныеККТЧекККМ;
		ИдОперации			= СокрЛП(Новый УникальныйИдентификатор);
		ПараметрыОбъектов	= Saby_Сервисы_Сервер.ПолучитьСтруктуруОбъектовДляРасчётаСкидки( ЧекиКРасчёту, ИдОперации );
	КонецЕсли;
	
	//Отдадим на расчёт входящие данные
	Возврат	Saby_Сервисы_Сервер.РассчитатьДокументы(context_params, ПараметрыОбъектов);

КонецФункции

Функция ПоставитьДокументВОчередьИОтправить(context_params, Параметры, РезультатЗакрытия = "") Экспорт
	ОбщийСтатусЗакрытия = Ложь; 
	Saby_Сервисы_Сервер.ОбновитьОчередь( Параметры.ЧекККМСсылка );
	РезультатЗакрытия	= Saby_Сервисы_Клиент.ЗакрытьДокументы( context_params, Параметры.ЧекККМСсылка, 1);
	
	Если ТипЗНЧ(РезультатЗакрытия) = Тип("Массив") И РезультатЗакрытия.Количество() > 0 Тогда
		ОбщийСтатусЗакрытия		= Истина;
		Для Каждого РВ Из РезультатЗакрытия Цикл
			//Ошибка при одной из строк с ошибкой
			ДокументПереданСОшибкой = Ложь;
			РВ.Свойство("error", ДокументПереданСОшибкой);
			//Свойства может и не быть
			Если ДокументПереданСОшибкой <> Истина Тогда ДокументПереданСОшибкой = Ложь; КонецЕсли;
			ОбщийСтатусЗакрытия		= ОбщийСтатусЗакрытия И НЕ ДокументПереданСОшибкой;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ОбщийСтатусЗакрытия;
КонецФункции

